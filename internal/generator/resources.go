// Code generated for package generator by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/templates/jsonrest.tmpl
// assets/templates/migration.tmpl
// assets/templates/model.tmpl
// assets/templates/repo.tmpl
// assets/templates/server.tmpl
// assets/templates/service.tmpl
// assets/templates/servicetest.tmpl
// assets/templates/transport.tmpl
// assets/templates/transportcnv.tmpl
package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsTemplatesJsonrestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x95\x4d\x6f\xe2\x3c\x10\xc7\xcf\xf1\xa7\x70\x73\xa8\x9c\x0a\x39\xf7\x4a\x5c\x1e\x5a\x3d\xaa\x76\xd5\x45\xad\x76\xf7\x6c\x25\x43\xea\x25\xd8\xce\x78\x02\x54\x28\xdf\x7d\xe5\x04\x0e\xb0\x94\x44\x2b\x90\xd8\xde\xc2\xd8\xf3\xf7\xbc\xfc\x66\x70\x2a\x9b\xab\x02\xf8\x2f\x6f\x0d\x82\x27\xc6\xf4\xc2\x59\x24\x2e\x58\x14\x83\xc9\x6c\xae\x4d\x91\x86\xd3\x38\x18\x10\x2d\xfa\xf0\x65\x80\xd2\x37\x22\x17\x33\x16\x91\xe3\xf1\x66\x23\xa7\xf3\x42\x3e\xab\x05\x34\x4d\xea\xe6\x45\xba\xb5\xbc\x02\x2e\x75\x06\x53\x45\x6f\x4d\x93\x12\x2a\xe3\x83\x7e\xcc\x12\xc6\x32\x6b\x7c\xfb\xd2\x66\x23\x9f\xcc\xac\x94\xaf\xda\x14\x75\xa9\x70\xaa\x7c\xa6\xca\x89\xf2\xd0\x34\x13\x5a\x7f\x81\x77\x9e\x59\x43\xb0\xa6\xf0\x39\x6e\x9f\xdb\x73\x98\xa8\x05\x6c\xef\xb7\xca\xb3\xda\x64\x5c\x80\xe3\x77\x8f\x26\x77\x56\x1b\x4a\xf8\x04\x41\x11\x9c\x7a\x4a\xac\x78\xc8\x49\xbe\x80\x77\xd6\x78\xf8\x89\x9a\x00\x47\x1c\xf9\xdd\xd6\x5e\xd5\xe0\x29\xe1\x1b\x16\x2d\x15\x72\x84\x8a\x93\x93\xfd\xc2\x2f\x50\xed\x3c\xfc\x50\x0f\xcf\x58\x94\xa6\xfc\x01\x32\x9b\x03\x8b\x00\x91\xdf\x8f\xdb\x3e\xc9\x67\x58\x75\x66\x14\x28\xff\xb3\xf9\x7b\x22\xbb\xdf\xe2\x16\xa1\x4a\x58\xa4\x67\x3c\xdc\xbf\x19\x73\xa3\xcb\x10\x6d\x04\x4e\x7e\xb5\x85\x48\xe4\x63\x68\xa1\x00\xc4\xa4\xb3\xae\x42\x8e\xbb\x84\xc5\x6a\x14\x42\x0c\x47\x08\x54\xa3\x61\x51\xd3\x85\xb1\x6d\x63\x17\xc7\x98\x83\x93\xbe\xb3\x0c\xc8\x45\x20\x54\x23\x7e\xdb\x09\x9f\x3f\xb4\x6f\x35\xb9\x9a\xd8\xc7\x1e\xcd\x71\x1e\xfe\x07\xda\x45\x3d\x2d\x6b\x54\xe5\x19\x50\x38\xa9\x79\x48\x41\xcf\x65\x7f\xa4\xf2\xf7\x7b\xa5\x3f\x9d\xc1\xd5\x57\xfd\x8c\x23\xd8\xa3\x7a\xa2\xf2\x1f\x0f\x5f\x46\xeb\x50\x6f\x94\x93\x6e\xf5\x88\x84\x45\xbe\xac\x8b\x11\xb7\xf3\x70\x90\xd1\x5a\xfe\x50\x65\x0d\xa2\x7f\x7d\x25\x52\x78\x42\x6d\x8a\xae\x17\x37\x76\xde\x35\xa1\x6d\x68\xbb\x54\xc3\x50\x8b\x58\x9b\xa5\x2a\x75\xce\xc3\x3b\x71\x72\xa4\x4d\x7f\x39\xb5\x08\x95\x7c\x2d\xeb\x82\x8f\x5b\xe9\x1e\x98\xfe\xa1\x21\xfe\xee\xf2\xcb\x2c\xf5\x7e\xe1\x43\xa8\x86\x78\x7c\x12\xae\xae\xed\x4f\x29\xe0\xfd\x94\x83\x21\x3d\xd3\x80\x7f\x92\xbe\x07\xfa\x00\x64\xae\x93\xf5\x07\x28\xe1\x22\xac\xf7\x0b\x1f\xb2\x3e\xc4\xe3\x93\xb0\x3e\x18\xb2\xfd\x75\x3a\xa0\x59\x3d\x94\x5d\x38\xaf\x01\x14\xfe\x0e\x00\x00\xff\xff\x83\xcf\xe0\x45\x1d\x0c\x00\x00")

func assetsTemplatesJsonrestTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesJsonrestTmpl,
		"assets/templates/jsonrest.tmpl",
	)
}

func assetsTemplatesJsonrestTmpl() (*asset, error) {
	bytes, err := assetsTemplatesJsonrestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/jsonrest.tmpl", size: 3101, mode: os.FileMode(436), modTime: time.Unix(1573068595, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesMigrationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x41\x6b\xf2\x40\x10\x86\xcf\x3b\xbf\x62\xbe\xe0\x21\xf9\xd0\x08\x3d\x0a\x1e\x8a\x2d\xa5\xd0\x83\x25\x1e\x0b\x75\x4d\xc7\xb0\x38\xd9\xd8\xc9\x08\x29\x61\xff\x7b\xd9\xd4\x83\x6d\x11\x14\x7a\xcc\x3b\x99\x67\x5f\xe6\xd9\xdb\x72\x67\x2b\xc2\xda\x55\x62\xd5\x35\x1e\xc0\xd5\xfb\x46\x14\x13\x6e\xaa\x04\x60\x3a\xc5\x85\x90\x55\xea\xfb\x09\xe6\x8f\x7e\xcb\xf9\x92\x0f\x62\x79\x69\xdb\xd2\xf2\xc2\xb6\x84\x93\x10\x56\x76\xc3\xa7\x94\xed\xc1\x97\x98\xd6\xf8\xbf\x76\x55\x76\x39\x21\xcd\x90\x44\x1a\xc1\x1e\x8c\x76\x38\x9b\x63\x9d\x3f\x90\xae\xba\x34\x03\x30\xad\xc6\x64\x3d\x70\x8a\xe7\xa7\xfc\x0b\x5b\x68\x5c\x5f\x03\x98\x38\x48\x5e\x7c\x12\xbf\x01\xcc\xeb\x38\xc2\x70\x8e\xda\xe5\xf7\x1d\x95\x69\xab\x19\x18\xb7\x1d\xd2\x7f\x73\xf4\x8e\xe3\x3b\x46\x48\x0f\xe2\x63\x0a\x26\xfc\xc6\xf4\x3d\x8a\xf5\x15\xe1\x68\x47\x1f\x37\x63\x1c\xb5\xef\x5c\xa8\x38\x5f\xc5\x36\x43\x91\x5b\x56\x92\x42\x31\x04\x40\x6c\x15\x8f\x25\x4f\xfe\xfc\xcb\x86\xb1\x11\xf9\x37\x1c\x10\xc7\x91\x77\x0c\x61\xb0\x75\x27\xcd\xfe\x12\x57\xd2\x30\x6f\x6c\xb9\xfb\xa1\xea\xc2\xf5\xeb\x44\x45\xe8\x19\x4d\x67\x4e\x32\xbb\xda\xda\xb7\x43\x7c\x06\x00\x00\xff\xff\xa2\x64\xfa\x07\xd7\x02\x00\x00")

func assetsTemplatesMigrationTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesMigrationTmpl,
		"assets/templates/migration.tmpl",
	)
}

func assetsTemplatesMigrationTmpl() (*asset, error) {
	bytes, err := assetsTemplatesMigrationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/migration.tmpl", size: 727, mode: os.FileMode(436), modTime: time.Unix(1572532722, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesModelTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xdb\x3c\x10\x3c\x8b\x4f\xb1\x10\x02\xc4\xfe\x90\x8f\xba\x07\xe8\x21\x70\x7b\xf0\x21\x45\x50\xb7\x3d\x67\x25\xae\xe4\xad\x29\xae\xc2\x1f\x24\xae\xe1\x77\x2f\xf4\x93\xc4\xb1\x0b\x37\x87\xf6\x66\x2f\x67\x67\x86\xc3\xb1\x3b\xac\x36\xd8\x10\xb4\x62\xc8\x2a\xc5\x6d\x27\x3e\xc2\x4c\x65\xb9\xc1\x88\x25\x06\x2a\xc2\x83\xcd\x15\x40\xde\x70\x5c\xa7\x52\x57\xd2\x16\x01\xa3\x78\x2e\x1a\xd1\x29\xb1\xc9\x95\xca\x8a\xe2\xf0\xdc\x72\x59\x74\x0f\xb9\xca\xda\x61\xcd\xe2\x38\x6e\x79\xe3\xe5\x91\x7e\x92\x2d\x4a\xac\x36\xe4\x4c\x31\xe8\xe6\x6a\xae\x54\xdc\x76\xd4\x0b\x17\x05\xec\x76\x7a\xe9\x6a\xab\x57\xec\x9a\x64\xd1\xdf\x61\xa8\xd0\x2e\x30\xd0\x7e\x3f\x39\xcd\xce\x62\x42\xf4\xa9\x8a\xb0\x53\x59\xd6\xea\xa5\x21\x17\xb9\xe6\x0a\x23\x8b\x53\x59\xb6\xdb\xfd\x0f\x1e\x5d\x43\x70\xb1\xa1\xed\x15\x5c\x74\x5e\x3a\xb8\xfe\x00\xfa\xce\x4b\xf7\x91\xea\xb0\xdf\x4f\x30\xae\xc1\x49\x1c\x11\x7a\x19\x3e\xb5\x25\x19\x43\x66\x3a\x1f\xc7\x9f\xb1\xed\x35\x5f\xbe\x26\x6b\xbf\x6e\xbb\x7e\x74\x6f\xca\xeb\xfc\x79\xbe\x10\x3b\x41\x73\xf8\x11\xc4\xbd\x9e\xbc\xb9\xc7\x02\x5b\x9a\xae\x71\x25\x2d\x47\x6a\xbb\xb8\xcd\xef\x27\x3f\xe4\xcc\x8b\xb7\xf1\x33\x00\x40\xab\x6f\x92\xe1\xa8\xb2\x7d\x1f\x64\x51\xc0\x8a\xe2\xc2\x13\x46\xfa\x8e\x36\x51\x80\x5a\xfc\x98\x9b\x56\x75\x72\x15\xcc\x8e\xd3\x3b\x50\x85\xff\xce\x45\x3b\x3f\xe6\x9e\xcd\x81\xbc\x17\x0f\x3b\x05\x50\x14\xf0\x85\x3a\x8b\x15\xc1\xe5\x19\x89\x21\x07\xbd\x8a\x9e\x5d\x73\x39\x98\x43\x27\x71\x4d\x1e\x92\xe3\x87\x44\xc0\xd3\x93\x91\x1f\x49\x97\x35\xf4\x2b\x60\x84\xc2\xf0\x20\xf4\xc4\x21\x82\x78\xd8\x4a\x82\xce\x53\x4d\xaf\x1c\xe2\x48\x4f\x6b\x11\x1e\xd9\x5a\x28\x09\x52\x20\x33\x28\xad\x6c\x6a\xa0\x21\x47\x7e\xa8\xc3\x84\xbc\x81\xce\x22\xbb\xbe\x38\xec\x9a\x71\x0b\x6d\x10\x78\x14\xbf\x81\x32\x45\xe0\x89\xab\xc5\x0d\x81\x15\xd9\x40\xe0\x96\x2d\x7a\x40\x6b\x21\xd8\xd4\x8c\x31\x13\x56\x6b\x60\x17\x22\xba\x8a\x46\x72\xa9\x21\xae\x39\x80\xa7\x20\xc9\x57\xa4\x87\x92\xb3\x26\x7d\x7d\x52\xf5\x83\x94\xee\xea\xa7\xbe\x94\x79\xcf\xdd\xd5\x4f\xf9\x69\xe7\x4f\xc1\xef\x0c\xfd\x2c\xd5\xd1\x0f\x46\x1f\x3f\xf8\x79\x17\xf3\xf3\xdc\x43\x51\x4f\x28\xe7\x2a\xf3\x14\x93\x77\xe0\xd8\xaa\xfd\x73\x87\xbf\x75\xe6\x9f\x75\xf8\x90\xfb\xa0\xc3\xef\x33\xff\x76\xf9\x37\xe6\x6f\x31\x56\x6b\xa8\xc4\x19\xee\x33\xfc\xab\xe6\x07\xee\x59\xac\xfe\x84\x2b\x45\x6c\x7f\x23\x3f\x15\xe3\x76\xd0\x1f\xb6\x17\x32\xfe\x8f\x4c\xbe\xbd\xda\xab\x5f\x01\x00\x00\xff\xff\xb9\x7c\xe9\xb1\x09\x06\x00\x00")

func assetsTemplatesModelTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesModelTmpl,
		"assets/templates/model.tmpl",
	)
}

func assetsTemplatesModelTmpl() (*asset, error) {
	bytes, err := assetsTemplatesModelTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/model.tmpl", size: 1545, mode: os.FileMode(436), modTime: time.Unix(1572984096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesRepoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5b\x73\xdb\xb6\x12\x7e\x26\x7f\xc5\x86\x13\x3b\xa4\x0f\x43\x25\xe7\x51\xe7\xa8\x33\xb1\xe4\x69\xdd\xc9\xa4\x6e\xe4\x24\x0f\x69\x26\x81\xa9\x25\x83\x08\x04\x68\x00\xb4\xa5\x68\xf8\xdf\x3b\x00\x28\x59\x37\x8b\x72\xad\x4c\xf3\x62\xd1\xc4\x72\x2f\xdf\x5e\xb0\xbb\x25\x49\xc7\x24\x47\x90\x58\x0a\xdf\xa7\x45\x29\xa4\x86\xd0\xf7\x82\xab\xa9\x46\x15\xf8\x5e\x90\x0a\xae\x71\xa2\xcd\x63\x56\xe8\xc0\xf7\xbd\x20\xa7\xfa\x6b\x75\x95\xa4\xa2\xe8\x7c\x2b\x04\x95\x82\x77\xd4\x35\x9b\x04\xee\x88\x11\x77\x54\xd0\xb1\x14\xb7\xf8\x1d\x59\xe7\x8a\xa4\x63\xe4\xa3\x4e\x2a\x78\x46\x73\x43\x37\x9b\x25\x17\xe3\x3c\x79\x43\x0a\xac\xeb\x0e\xe5\x1a\x25\x27\xac\x53\x88\x11\xb2\xc0\xf7\x98\xc8\x73\x94\xd0\xc2\x8e\x89\x3c\xf0\x23\xdf\xd7\xd3\x12\x8d\xd2\xb3\x59\x72\xce\x33\x96\x0c\x29\xcf\x2b\x46\xe4\x05\x51\x29\x61\x7d\xa2\xb0\xae\xdf\x62\x29\x40\x69\x59\xa5\x1a\x66\xbe\xe7\xa5\x7a\x02\x8d\x69\x49\xdf\xfd\x9a\xb7\x59\x0e\x27\x4e\x4b\xf3\x36\xa3\xb9\xef\x19\x65\xe0\xc4\x69\x94\xbc\xb6\x3f\xbe\xe7\x5d\x4e\x00\x4e\x8c\xd5\xc9\xe5\xc4\xf7\x6a\xa3\x46\x56\xf1\x14\x0a\x32\xc6\x36\x3d\xc2\x2d\xc2\x63\xd8\x94\x1d\xc3\xa6\xe8\x18\xf4\x64\x21\x38\x82\x93\x56\x9b\x67\xbe\x27\x51\x57\x92\xc3\x71\x1b\x6d\x83\x4b\x17\x52\x3d\x89\x1d\x1a\x5d\xa3\x56\xec\x40\xe8\x1a\x75\x62\x6b\x7b\x17\xc0\x92\xd4\x7e\xed\xfb\x9d\x0e\xf4\x25\x12\x8d\x40\x60\x36\x4b\xde\xa2\x72\x6e\x85\xc4\x41\x12\xae\xcb\xed\x93\x02\x97\x55\x6c\x35\x22\x6a\x04\xec\xe2\x04\x27\x36\x78\x92\x5d\xbc\x22\x40\x29\x85\x34\x98\xec\xe0\x94\x0c\x51\x3b\x79\xef\x09\xab\x50\x85\x91\xef\x7b\x4a\x43\xb7\x07\x5f\x66\xb3\x64\xf8\xe7\xeb\xe4\x9c\x2b\x94\x7a\xa8\xeb\xfa\x8b\xef\x7b\x9f\x63\xc3\xd7\x9c\xb7\x58\x9a\x5c\x4e\x6c\xc8\x8f\xce\x26\x98\x86\x4a\xc7\xbb\x3e\x30\x52\x1b\xcf\xa1\x94\x0d\xd0\xbf\xa2\x7e\xc5\xd8\xe2\xb3\x0b\x56\x49\xc2\x96\x4d\x84\x4c\x8a\xc2\xa6\xf3\x01\xd1\x77\x52\xc3\xe8\x8e\x99\x13\xbc\x0c\xff\xc7\x4f\xed\xf8\x3b\x9c\xac\x0f\x22\xe3\x84\x55\x50\x87\xc8\x30\x35\x82\xe6\xb8\x1a\xe2\xbd\x30\x75\x5f\x86\xc7\xf7\x6a\x17\x83\xd2\x4b\x78\xee\xa0\x5b\x81\x7a\x35\x9c\xaf\xa6\x70\x3e\x38\x2c\xaa\x21\x1d\x81\x2d\x7e\x19\x49\x71\x56\x47\x10\xee\x09\x62\x03\xe0\x0d\x91\xbb\xf0\x81\x76\x6e\x1b\xa1\xed\xb0\x3c\x9d\x9e\x0f\x9c\x1b\xcc\x71\x0f\xb2\x42\x27\xc3\x52\x52\xae\x33\x1b\xb7\x74\x94\x84\x4a\x4b\xca\xf3\x28\x6a\x3c\xb5\x5f\xf8\x1b\xa3\x37\x0a\x51\xbb\xa7\xb6\x52\xae\xf8\xea\x74\x3a\x64\x55\x0e\xca\xaa\xaf\x36\x3c\xa7\x58\x95\x1f\xd6\x77\x4e\x60\xa8\xac\x54\x07\xc5\x4f\xe4\x3e\xa3\xdb\x2e\x07\x1a\xb5\x7f\x06\xcf\xbd\x2b\x47\x44\xe3\xaa\xbf\x0e\xe8\x27\xc7\xfe\x80\xf7\x86\xc4\x6c\xef\x6a\x6f\x10\xdb\x75\xcf\x9c\x0f\x92\xa1\x0d\x9c\x30\x8a\x7c\x8f\x66\x96\xef\x93\x1e\x70\xca\x6c\x8f\xd2\x20\x69\x5c\x77\x66\xe4\x67\x61\x90\x12\xce\x85\x06\x89\x5a\x52\xbc\x31\x7d\x5b\x86\x12\x79\x8a\xbb\x94\xe9\xc2\x91\x0a\xac\xd6\x8e\x8f\x15\x67\x42\xa7\xe5\x12\x74\xe0\x2d\x5d\x82\x9d\x0e\x9c\x56\x94\x8d\xa0\xb2\x27\xa0\x34\xd1\x58\x20\xd7\xbe\x97\x7e\x25\x3c\x47\x15\xc3\xb5\x9e\xb6\x60\xd3\x77\xa4\xbb\xa0\x89\xe1\x58\x62\x16\xf9\x5e\x29\x94\xe1\xf6\xc2\xf7\x18\x71\x81\x6e\xf8\xff\x1f\xfe\xeb\xbb\xec\x51\x1a\x6c\xa7\x9a\x9c\x56\x59\x66\x1a\x33\xa5\x93\x0f\x92\x6a\x6c\x80\x0d\xde\x5d\x0c\x5e\x5d\x9e\xad\x55\xfc\x21\x27\x63\x6c\xdc\x3f\x3c\xbb\x84\xc0\x18\x97\x09\x09\x65\x0c\xaa\x34\x52\xa4\x51\x11\x1a\xa3\xac\x33\x8c\xb4\x92\x48\x4d\x09\x6b\xd2\xdd\xf7\x8c\xcf\xac\x5e\x86\xc0\x9b\x9f\xae\x26\x5b\x70\x74\x03\x3d\x38\xba\x81\x20\x76\xec\x8d\x2c\xaf\x06\x64\x0a\xf7\xf9\x2e\x5e\xfa\xd0\xb3\x5e\x5b\xb7\xb1\xf9\xde\xf2\x35\x78\xf5\xc0\xfc\xfd\x0f\xbc\x34\x6d\x1b\xb1\xd9\x6f\x5f\x5b\xec\x9e\xbf\x74\xae\x5f\xe3\xb1\x22\xf9\xc3\x6f\x67\x6f\xcf\x80\x8e\xa0\x07\xcf\x8e\xd4\xb3\xff\x05\x3b\xfb\x94\xbb\x30\x36\x61\xf5\xc0\x0e\x68\x91\x00\xf1\x66\x7b\xba\xd6\x0b\xfd\x28\xce\x26\xaa\x99\xc8\x93\x01\x5e\x55\x79\x16\x06\xbb\x0a\xc1\x46\xe0\x77\xff\xe2\x36\xb7\xae\x2b\x94\xd3\xa5\x6c\x5e\x6f\xdd\x6c\x41\x7b\x4c\x4e\x80\x49\x0a\x89\xd9\x7e\xe5\x2a\x2c\x48\xf9\xd1\x45\xe9\x27\xf7\x13\x9b\x3e\xc3\x5e\x3a\xf3\xa0\xee\xf6\xec\xb0\xb2\x49\xea\xc0\x7e\xde\xe4\xc0\xd3\x31\x4e\x63\x78\x5a\x4a\x61\x13\x23\xb9\x90\xa2\x1c\x60\xa6\xa0\xae\x1d\x19\xcd\x20\xe4\xe8\x28\x92\x4b\x33\x8a\x05\xa5\xa4\x05\x91\xd3\xcf\x63\x9c\x06\xd1\x32\xa1\x90\x10\xe2\xf5\x0a\x6d\x55\xd1\x51\x10\x6d\xbc\x76\xaa\x6c\x39\xb0\xc3\xe8\xe6\xeb\x2b\x21\x18\x12\xbe\xe5\xc4\xf4\x57\x39\xca\x2d\x27\x19\x13\x64\x1b\xaf\x11\xa6\xb4\x20\x2c\x88\x8c\xe6\x34\x33\xb0\x27\xb3\x59\x43\x72\x0f\xea\x50\xd7\x77\x34\xef\x09\x7b\x95\xa6\xa8\x94\x90\x50\xd7\xa6\xa4\x9b\xa3\xfb\x3d\xfb\x28\xee\x76\x6a\x73\x3e\xfd\x18\x2c\x88\xfa\x82\xd9\x74\x80\xba\x0e\x3e\x41\x0f\x82\xee\xd6\x23\x53\x0c\xac\x73\x90\x8f\x96\x1d\xb5\x86\xc8\x37\x25\x78\x00\x0d\x1c\x4f\x24\x66\xa6\xc9\x48\x06\x88\xe5\xd9\x75\x45\x58\xb8\x89\xd0\x5c\xf7\xe5\xf0\xb5\x20\xfc\x53\xfb\x6d\xec\x1a\xf1\x54\xfd\x3e\xfc\xe3\x4d\xf8\x28\x66\x77\x99\xea\x4a\xf0\x23\xf0\x33\x00\xee\x85\xe1\x15\xe5\x44\x4e\x17\x28\x32\xe4\x8f\xb4\xe1\x9e\x80\x88\xe0\x17\x78\x01\xc7\xc7\xfb\xf9\xe9\x41\xac\xf7\x72\x61\x03\xcd\xfd\xea\xfd\x90\x80\xdd\x52\x59\x4c\xa5\xde\x96\xdd\x44\xa3\xa6\xc5\xb6\xa3\x1d\xaf\x95\x26\x45\xb9\xeb\x4c\x7f\x6f\x4a\x5d\x93\x21\x7b\x03\x92\x38\xd7\xec\x5b\x21\xfe\x1d\x78\xd7\xac\xce\x51\x30\x91\x12\x4d\x97\xca\xc2\x83\x6c\x9e\xe7\xdf\xa2\x36\x3e\xca\xe8\x3b\x76\x87\x37\x7e\xdb\x73\x73\xb7\x2f\x7a\x5e\x93\xcb\xcd\x3f\x91\xb9\xed\xcd\x60\x33\x40\x86\xeb\x83\xcd\xdd\x72\xe6\xe0\xcb\x04\x27\x2e\xa4\xa3\xc5\x2c\xba\x18\x59\x56\x07\x44\x47\xd8\x3e\xdf\x47\x0f\x5d\x6c\x35\x7d\xd7\xd6\xb5\xd5\x5c\xa8\x1d\xd1\x47\xf6\x9f\xf5\x65\xe1\x0a\x34\x07\x9e\xd6\x97\xc5\xaf\x0e\xec\x2d\x20\xed\x3b\x45\x1f\x0c\xa8\xbe\x28\x0a\xaa\x41\x4b\xc2\x15\x49\x4d\x7e\x1d\x70\x87\x6a\x79\x87\x2b\xc3\x6c\xdb\xa8\x3e\xd7\x79\xfe\xed\x3c\xba\x5b\xd7\xce\x1b\x6b\x48\x09\x27\x4e\x8d\xd6\xed\x78\xfb\x82\x7b\xfb\x7e\x7b\xbf\xd5\x7b\xb3\x76\x3f\x25\xe9\x38\x97\xa2\xe2\x23\x33\x21\xc8\xa4\x9f\xe5\xee\xe1\xb5\xb0\x0f\x7a\x12\x35\x2e\x69\x63\xf9\x06\x6f\x2f\x27\xe0\x74\x50\x2e\xaa\xef\x9f\x1f\x6c\x80\x53\x4e\xcd\xc0\x46\xbf\xe3\x08\x6e\xa9\xfe\x0a\x04\x38\xde\x6e\x71\xfa\xde\x98\x59\x1d\xc2\x08\xc2\xd6\x30\x58\x5e\x3f\xe9\xc9\x22\x6c\x65\xd2\xb0\xd8\xb1\x87\xe0\x94\xb9\xcd\x8d\x57\xff\x30\xcc\x63\x23\xc5\xaf\xfd\xbf\x03\x00\x00\xff\xff\x7a\xc7\x6a\xde\x98\x1a\x00\x00")

func assetsTemplatesRepoTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesRepoTmpl,
		"assets/templates/repo.tmpl",
	)
}

func assetsTemplatesRepoTmpl() (*asset, error) {
	bytes, err := assetsTemplatesRepoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/repo.tmpl", size: 6808, mode: os.FileMode(436), modTime: time.Unix(1573392787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4d\x4f\xe3\x3e\x10\xc6\xcf\xf1\xa7\x18\xf9\xf2\x4f\x50\x48\xee\x7f\x89\x03\xea\x6a\x81\x05\xed\x46\x05\x96\xb3\x99\x4e\x6b\x8b\xc4\xce\xda\x63\x68\x15\xe5\xbb\xaf\x9c\xf0\xd2\x7d\x11\x45\x7b\xa8\x64\x4f\xfd\x7b\xec\xe7\xf1\x38\xbd\xc2\x07\xb5\x21\x18\x06\xa8\x9a\x87\x4d\x75\x4d\xfe\xd1\x20\x35\x8a\x35\x8c\xa3\x10\xa6\xeb\x9d\x67\xc8\x45\x26\xd1\x59\xa6\x2d\x4b\x91\x49\x4b\x5c\x6b\xe6\x5e\x0a\x91\xc9\x8d\x61\x1d\xef\x2b\x74\x5d\xbd\x71\xc7\xa8\x4d\x8d\xda\x48\x51\x08\x81\xce\x86\x89\x4d\xea\x17\x76\xdd\x56\xd7\xc6\x6e\x62\xab\xfc\x95\x7b\x22\x8f\x2a\x10\x8c\xe3\x82\xb7\x97\xb4\x83\x67\xf9\x34\x3c\x01\xf9\x2e\x31\x89\xd7\x35\x2c\xa9\x6f\x15\x12\xe4\x08\x47\x0b\x67\x59\x19\x4b\xbe\x80\xfb\x1d\xec\x5c\xf4\x80\x31\xb0\xeb\x20\xb0\x8f\xc8\x69\xbd\xf3\x69\x97\x47\xf2\x0c\xac\x09\x3a\x62\xed\x56\x60\x2c\x3b\x50\xb0\x8e\xc8\xc6\x59\x30\xeb\x44\xc3\xca\xd9\xff\x18\x2c\xd1\x0a\xd2\xdf\xcc\x0a\x35\x18\xae\xc4\x3a\x5a\xfc\x7d\xc7\x4e\x3d\xd0\x29\xa2\x8b\x96\x4f\x9b\x8b\xa5\x8b\x4c\x3e\xef\x95\x27\xcb\x80\xda\x54\x73\xa5\xd8\x1b\xc3\x20\x32\x4f\x1c\xbd\x85\x79\xdd\x5c\xcf\x65\x3d\x0c\xb3\xf1\xa6\x8d\x5e\xb5\xaf\xb6\xc7\x51\x96\x90\xf6\xce\x51\xff\xa2\x39\x88\x2c\x43\x5d\x35\x2e\x70\x2e\x6b\x59\x02\x56\x0b\x4f\x8a\xe9\x8f\x08\x1b\x15\x50\xb5\x8b\x39\xc3\x2f\xd7\xdf\xbe\x16\x33\x7a\x46\xaf\xe4\x19\xf1\x87\xb1\xb7\x03\xcb\x41\x8e\xe3\xbb\x37\x36\x0c\x72\x94\x6f\x16\xc2\x5f\x3c\x64\x01\x75\x75\x1b\x28\x3f\xd4\x2c\xc5\xcb\xe2\x7f\x39\xf7\x04\x36\xf1\x15\xbc\xed\x57\x1f\x8e\x6a\x62\x3f\x51\x4b\x93\xed\x09\x9f\x67\x1f\xc3\xc7\x42\xa4\xdf\x28\xe6\x16\x3a\x64\x33\xb7\xb4\x65\x48\xaf\xac\x3a\x57\x76\xd5\xa6\x9c\xf6\x67\x7b\x1d\xb4\x5f\xfe\x9c\xf2\x9d\x42\x7e\x9a\xeb\x4b\x0a\xbd\xb3\x81\xee\xbc\x61\xf2\x25\x78\x38\x7a\xae\xff\x88\x14\x78\x0e\x3f\xb4\x71\x03\xff\x9f\x4c\x97\x72\xbb\xbc\x6a\x94\x57\x5d\xee\xcb\x03\xef\xf0\x38\x61\x72\x6a\x07\xde\x4e\xf8\xfc\x86\xab\x3b\xc3\xfa\xbb\x6a\x23\xe5\xbe\x5a\xcc\xb5\xbc\x28\x0f\x5a\xbe\xa4\x5d\x09\x49\x33\x49\x26\xfb\xd3\xe7\x88\xce\x6f\x6e\x9a\xfc\xa9\x04\x3f\xe9\xbe\xe8\x21\x6f\x8b\x97\x44\x7f\x06\x00\x00\xff\xff\xd9\x80\x76\x57\xc6\x04\x00\x00")

func assetsTemplatesServerTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServerTmpl,
		"assets/templates/server.tmpl",
	)
}

func assetsTemplatesServerTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/server.tmpl", size: 1222, mode: os.FileMode(436), modTime: time.Unix(1572867572, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServiceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\xcd\x6e\xdb\x3a\x10\x85\xd7\xe2\x53\xcc\xf5\x22\x90\x02\x83\xda\x5f\xc0\x8b\x36\x69\x03\x03\x6d\x6a\xc4\xe9\x03\x10\xf2\x58\x15\x42\x91\xca\x90\x6c\x5a\x18\x7a\xf7\x42\xa4\xf2\x63\x37\x36\x15\xbb\x75\xd2\x55\x10\xfa\xf0\xcc\x0c\xe7\x1b\x8a\x8d\x28\x6e\x44\x89\x60\x90\xbe\x57\x05\x32\x56\xd5\x8d\x26\x0b\x29\x4b\x6c\x03\xa3\xd5\x8a\xcf\x6e\x4a\x7e\x29\x6a\x6c\xdb\xbc\xb9\x29\xf3\x7e\x65\x1e\xf4\x33\x61\xbf\xb5\x6d\x6e\x49\x28\xd3\xed\x1b\xb1\x8c\xb1\x42\x2b\xe3\x1d\x0a\x42\x61\x71\xb5\xe2\x53\xb5\x94\x7c\x5e\xa9\xd2\x49\x41\x33\x61\x0a\x21\xcf\x84\xc1\xb6\xfd\x40\x04\x13\x18\x15\x42\x29\x6d\x21\xe8\x61\x73\xc3\x27\x7d\x87\x54\x78\xfd\x88\x25\x25\xda\x77\x52\x0e\x37\x2d\xd1\x3e\x38\xce\xa4\x23\x21\x9f\xf8\x81\xac\x8c\x0d\xa6\x31\x47\x80\x2d\xa6\xcf\xa7\xe9\x9a\xc5\x8b\x6a\x0f\xfa\x88\xe9\x02\x25\xbe\xc4\x34\xe8\x77\x9b\x66\x8c\x2d\x9d\x2a\x20\x35\x70\xda\x77\x35\x83\xb3\x68\xe7\x52\xc2\x5b\xb0\x0d\x8f\x2b\xaf\xf0\x76\x0c\x84\x06\x4e\x07\xca\x4d\x06\x48\xa4\x09\x56\x2c\xc9\x73\xf8\xac\x17\x28\x59\xe2\xe0\xff\x09\x10\xde\xf2\x6b\xed\x57\xd2\x8c\xf9\x9f\xaf\xb0\xd1\x2c\x21\x6c\xf4\xb8\xdb\xd6\xa9\x0c\xdf\x0c\x70\x26\x6a\x7c\xf0\x6f\x74\x9a\xb1\xa4\x5a\x7a\xf9\x7f\x13\x50\x95\xec\x42\x25\x84\x86\x7f\x24\x5d\x07\x7b\x55\xc9\x31\x0c\x22\xd8\xc7\xcd\xbc\x81\x75\xa4\xba\xff\x58\xd2\x32\x96\xa0\x6f\x46\x97\x5a\x5f\x77\x7a\xe2\x8e\x1f\x59\xd7\x75\x65\x8f\x54\x71\x9e\xc3\x17\x67\x1b\x67\xd9\x86\xf7\x89\x1b\xc3\x68\x34\xee\x22\x67\xec\x7e\x9b\xaa\x24\x6b\x9f\xc3\xef\xe2\x71\x1c\xc3\xc8\x3e\x47\xde\x4e\xd1\x1a\x74\x11\xe5\x06\x6f\x7f\x15\xa8\x41\xb7\xd7\xd6\xe3\x75\xe6\x21\x25\xdf\xdb\x0b\xef\x76\xa4\xe0\xfb\x33\x75\x58\xdc\xad\x4c\x75\xa7\xb1\x17\x53\xbb\xee\xb3\x88\x6c\x1b\x57\x6f\xfe\x26\x8b\x7f\xe1\xb6\x53\x17\xd2\x79\x64\xee\xfd\xcf\xb9\x74\x65\xea\x78\xf7\x87\xcf\x2d\x55\xaa\x3c\x42\x1e\x07\x01\xf8\xca\x37\xda\xd7\xe8\x73\xe0\x1e\xc0\xb8\x72\x8d\xc1\x21\xf2\x63\x5e\x70\x83\xde\x3d\xbb\x4e\xfb\x02\x2d\x88\xa2\xd0\x4e\x59\x96\x14\x8e\x08\x95\xfd\xed\xd6\xeb\x09\xec\x86\x68\xba\x40\x65\xab\x65\x85\xe4\x71\x3c\x5a\x9e\xe1\x8b\x0e\x02\xea\xad\x53\x9d\x38\x3e\x3d\x87\x09\xf4\x55\xf0\xe9\x79\xd8\x1a\x7a\xb6\x06\x74\x58\x7a\xc1\xfb\xe0\xb0\xfc\xf7\x1f\xa5\x83\xcf\xed\x4f\x4c\xd3\x79\xf4\x1d\x7c\x3f\x4d\x71\xe5\xda\x34\x0d\x91\xff\x3b\xd3\xf4\xa4\xcb\xa1\xb0\xd7\x1e\x9b\x37\x87\x9d\xf7\x1e\xce\x5d\xb4\xad\x90\x9e\xfa\xea\x76\x13\xd4\xa3\xa2\x29\xeb\xca\xed\x83\x1a\x3e\x68\xe7\x25\xde\x5d\xff\x48\x33\xd6\xb2\x5f\x01\x00\x00\xff\xff\x4d\xf5\xb2\x3f\xbb\x0f\x00\x00")

func assetsTemplatesServiceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServiceTmpl,
		"assets/templates/service.tmpl",
	)
}

func assetsTemplatesServiceTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServiceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/service.tmpl", size: 4027, mode: os.FileMode(436), modTime: time.Unix(1573393155, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServicetestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdf\x73\xdb\x36\xf2\x7f\x26\xff\x0a\x94\x33\x49\x29\x7f\x59\xaa\x4e\xbf\xf7\xe2\x1b\x3d\xb4\x8e\xef\xda\x99\xc4\xf6\x48\x6e\xfa\x90\xcb\xb4\x10\xb9\xa4\x78\x26\x01\x1a\x00\x25\xa7\xae\xfe\xf7\x9b\x05\x28\x8a\x94\x68\x90\xad\xdd\x4e\xaf\x97\x3e\xd4\x24\xb8\xd8\x5d\x2c\x16\x9f\xfd\x21\xa4\xa4\xd1\x2d\x4d\x81\x48\x10\xeb\x2c\x02\xd7\xcd\x8a\x92\x0b\x45\x7c\xd7\xf1\x22\xce\x14\xdc\x2b\xcf\x75\x3c\x10\x82\x0b\x89\x4f\x49\xa1\x07\xb8\x7e\x51\x20\x55\xc6\x52\xcf\x75\x1d\x2f\xcd\xd4\xaa\x5a\x86\x11\x2f\xa6\x31\x5d\x43\x94\xae\xa6\x29\xff\x42\x96\xb0\x99\xe2\xff\xbc\x2e\xc9\xbf\x0b\x9e\x09\xce\xa6\xf2\x2e\xbf\xaf\x3f\xe5\xd4\x7c\x2a\xb2\x5b\xc1\x37\xf0\x33\xe4\xd3\x25\x8d\x6e\x81\xc5\xd3\x88\xb3\x24\x4b\x87\xe9\xe2\x25\xd2\x3c\x3c\x84\xd7\xb7\x69\x78\x49\x0b\xd8\x6e\xa7\x19\x53\x20\x18\xcd\xa7\x45\x96\x0a\xaa\x32\xce\x6c\x34\x3c\x86\xdc\xf2\x5d\x40\xc9\x8f\x3f\x97\xb7\xe9\xb4\x1e\x59\x18\x3b\x5e\x53\xb5\xda\x6e\x3d\xd7\x51\x25\x19\x49\x3c\x55\x82\x32\x89\xc6\x1f\x5e\x67\xce\xd1\x18\x45\x96\x92\x01\xc2\xf6\x9a\x0b\x1e\x0f\x92\xd7\xcb\x97\xeb\x68\x88\xb4\x76\x18\xcf\x9d\xb8\xee\x9a\x0a\xe2\xbb\x84\x4c\xa7\xe4\x5c\x00\x55\xe0\x3e\x3c\xec\x16\x77\x03\x52\x85\x66\xf4\x2d\x2d\xb7\x5b\xd7\xd0\x7d\x5f\xc6\x48\x47\x48\xa5\x1f\x1e\x1e\xc2\xef\x58\x92\x87\x8b\x8c\xa5\x55\x4e\xc5\x35\x95\x11\xcd\xcf\xa9\x84\xed\xf6\x1d\xcd\xb3\x98\xcc\x48\x41\xcb\xf7\x52\x89\x8c\xa5\x1f\xf4\x7e\x24\x34\x82\x87\xed\x83\x4b\xc8\x81\x34\xc3\xdb\x48\x23\x64\x27\x71\x41\x8b\x32\x07\x72\xea\x12\x22\xf5\xa3\x4d\xe6\xe9\x80\xbc\x8c\xc5\x70\x4f\x3a\x52\x0d\xff\xb7\xb4\x24\x5f\xf6\xc9\x7d\x35\x4a\xee\x98\xb5\x5a\x65\x9f\xd6\xb2\x27\xae\x9b\x54\x2c\x22\xf8\xf9\x2d\xcd\x98\x5f\x90\x93\xfa\xb4\x86\x6f\x27\xe4\xc1\x75\x8a\x54\x90\xb3\x19\x91\xa0\xaa\xd2\x9f\xb8\x4e\xc4\x63\xc0\x81\x22\x9c\x57\x0c\x07\x14\x50\x11\xf3\x0d\xf3\x8b\x54\x4c\x5c\x87\xcb\xf0\xe2\x3e\x53\x3e\xd2\x4d\xdc\xad\xeb\x4e\xa7\x9a\xbb\xd9\x5b\xdb\xa2\x08\x0a\x96\xe4\x90\xe4\x0d\xdf\x80\x88\x0c\x45\x84\x4c\x32\xce\xc2\xbd\xd6\xc3\x7c\x7d\xb5\x5f\xd3\x8d\x5e\x13\x9a\x1b\xd7\xd3\xef\x7f\x0b\x25\xaa\x48\xa1\x0b\x3a\xe8\xb1\x02\x24\x19\x16\x32\x07\xe9\xba\x4e\xa4\xee\xd1\x36\x35\x22\x86\xdf\xd0\xe8\x36\x15\xbc\x62\xb1\xb6\x5c\x92\xe2\x47\x54\xe5\x5c\x03\x15\x0e\xe6\xbc\x19\x7c\xc3\xd3\x14\x84\x3f\x71\xb5\x82\x73\x28\xb9\xeb\x54\x12\x04\x3e\x05\x04\x84\xd8\x11\xe2\x80\x1f\xa9\xfb\x80\x44\x49\x1a\x90\x9c\xa7\x01\xf1\x10\x72\xbe\x58\x51\x16\xe7\x20\xbc\x89\xeb\x64\x89\x9e\xf2\xd9\x8c\xb0\x2c\xc7\x45\x3b\x2a\xbc\x40\x78\xf6\x41\x88\xfa\x69\x32\x71\x9d\xad\x96\xf6\x75\xa5\x56\xae\x43\x77\x12\xf0\xf5\x48\x02\xad\xd4\xaa\x91\x10\x90\x9d\x6a\xb5\xbe\x68\x40\xd7\x41\x91\x33\x42\xc3\x11\xbb\x22\xe0\x2e\x20\x2f\x05\x48\x9b\xb2\x89\xef\xe9\x3d\x07\xab\x5b\xe8\xb0\x73\x46\x5e\x48\x4f\xdb\xa9\xb3\x3a\xad\xdc\x3b\x10\x59\xf2\xd1\x75\x6c\x4c\xce\x66\xb8\xd5\xa1\x4d\x67\x2b\x03\x23\xa3\xd9\xa8\x14\x94\x8d\xd5\x37\x1f\x17\x79\x95\xfa\x16\x7e\x21\x12\xe8\x0d\x18\x32\x10\x65\x8c\x2b\x14\x68\x35\x52\x22\x78\x41\x62\xaa\xe8\x92\x4a\x78\xd4\x58\x59\x62\x63\x62\xd6\x48\x66\xcf\xa5\x86\xb7\x97\xfa\x59\x26\x17\xb4\xb0\xbb\x8c\x85\x6f\x40\x4e\x06\xf5\x9e\xd4\x1a\xbf\xe1\x69\xe2\x7b\x2f\xfe\x6f\xfd\x2f\xe6\x05\x04\xb3\x8e\x70\x11\x57\x45\x69\xe3\x8f\xf6\xf9\x8d\x53\x6b\xe1\x78\x4e\x9a\x33\xe8\x59\x81\x10\xcd\x43\x28\x8b\x49\xa6\x24\x59\xe3\xf4\x2c\xd2\xb8\x47\x62\x0e\x92\xa0\x99\x0b\xaa\xa2\x55\x68\xec\xb7\x07\xd9\x7f\xee\x9d\xee\x3a\xaf\x04\xcd\x7b\xf0\x15\x37\x88\xe6\x39\xe9\x12\xb6\x1d\x6f\x0f\xae\x56\x7e\xbd\xb8\x7a\x2d\x40\xc0\x5d\x95\xc9\x4c\x81\x74\x9d\x1f\x9b\xf3\x60\x8e\xf1\xa2\x13\xda\x7a\x78\x0e\xf8\xba\x3e\xe9\x75\x18\x60\x69\x1d\x29\x1f\x5f\x8a\x0d\x13\x4c\x04\x70\x04\xdc\xa1\x7a\xd6\x95\xce\xe1\xee\xa1\x1d\x0e\x06\x88\x3f\x45\x82\x56\x24\xb0\xbb\xd0\xd8\x20\xd0\x46\x95\xa3\x5d\x1e\x8f\xff\x6b\xcb\xe9\x38\xc0\xff\x63\x0a\xad\xa1\x8d\xc3\x31\x2c\xfa\x1e\xe3\xc8\xb5\xe4\xac\x03\x76\x28\x48\x13\xe0\x6a\x3d\xef\x60\xb1\xf3\x7a\x42\x67\x5d\xcd\x94\x9a\xcb\x9d\xfa\x88\x2a\xe7\xc0\x7c\x8b\x4e\xc6\xac\x48\xfb\xd9\x8c\xbc\x3a\x3c\x4c\xf7\x25\x44\xfa\x1c\xa9\x0d\xb7\x98\x37\xe5\x8a\xbc\x88\xbd\x00\xf9\xec\xd7\x60\x91\xfa\xfe\xcb\x0f\x3a\x7a\xa1\x50\x0b\x30\x1a\x30\x38\x7d\xef\xc9\xbc\x4a\xbd\x0f\xe4\x97\x5f\xac\x4c\x4f\x7f\x05\xd3\x57\x0d\xd3\xce\x6e\xf0\xa5\xa2\x19\x83\x98\xac\x69\x5e\x81\x24\x31\xdf\x83\x29\x31\xe6\x80\x98\x70\x06\xd2\x82\xac\x96\xdc\xd5\xee\xa6\xcb\x8f\x04\x95\xea\xc7\xd7\xd1\x99\xeb\x01\xc2\x3e\x2a\xee\xbf\x10\x79\xfb\x13\xeb\x3b\x54\xe4\xbb\x18\x98\xca\x92\x0c\x04\xbe\x39\xe8\x08\x67\x8f\x4b\xdf\x39\x60\xb8\xd0\xc5\x51\xe0\x3a\xce\x36\x30\xf2\x7b\x30\xfc\xf7\xcf\xe7\x45\xb3\x19\x08\xce\xe1\x25\x6c\xbe\x35\xe8\xf9\xdb\xc1\x7b\x9f\x71\x65\x2c\x53\x19\xcd\xb3\x9f\x41\x73\x27\xf5\xec\x47\x76\xc0\x11\xe1\x39\x67\x0c\x22\xf5\x97\x8b\x2f\x4f\x2a\x33\x86\xf2\xd6\xd1\x31\xe6\x79\xe0\xdd\xa2\xca\x1c\xe4\xb8\x62\xc5\x9e\xcb\xcf\x41\xea\x5e\xd3\x58\x90\x66\xb4\x80\xe7\xc3\xd3\xef\x07\xfb\x39\xd6\xdd\xd0\x8e\x6e\x7a\x42\x2d\x38\x1d\x66\xfa\x07\x23\xea\x1f\x0d\xa9\x03\xf5\xad\x0d\x2f\xdd\xc3\x66\x88\x31\x66\x4f\x33\x64\xd8\xca\x9f\x52\xe0\x0e\x44\x8d\x70\xcb\xb1\x28\x65\x5c\xfe\x77\x6f\x86\x8c\x86\x98\x3f\xb0\x1f\x82\x78\xf5\x3f\xd4\x12\x41\x2f\xba\x7a\x7d\x75\x46\xbe\x8e\x63\x42\xa3\xa8\x12\xb8\xf1\xd1\x0a\xa2\x5b\xc2\x13\x5d\xc1\x1b\x67\x88\x49\x92\x41\x1e\xcb\x70\x9c\xa6\xe1\x45\x41\xb3\xbc\x4e\x8c\x06\xb0\xdf\x38\xae\x6e\x36\xbf\xf7\x00\xe7\x3d\x5f\x00\x78\x0d\x39\x8c\xea\x07\xc7\x9a\xd0\x92\x56\x6b\xf3\xe9\xbc\x6a\x1f\x09\x86\xb9\xff\xb5\x73\xeb\xa7\x04\x82\x5d\x62\x3e\x6c\xc3\x31\xb9\xf9\x63\x9d\x4d\x4b\x6a\x3e\x46\xf0\xa7\x00\xd3\x0a\x30\x23\xbc\x7d\x6c\x80\x39\x38\x6d\x4f\x0a\x30\x6b\x9b\x46\xcf\xdc\x28\xdf\xb9\xd3\xa3\xc1\x41\x80\xaa\x04\x3b\xee\x5e\xf4\x22\xcf\xec\xb7\xcd\x6b\x6b\x82\x3c\x46\x2a\xdd\x85\x54\x9b\xe9\x37\xd4\x74\x7f\xcd\x2e\xc5\x7d\x91\x63\x5b\xff\xa2\x37\xce\xac\x32\xaf\x52\x22\xf7\xa6\x23\x27\xe6\x37\xf4\xd0\x9c\x99\x09\xf1\x4f\xf4\x8f\xbd\xd6\x34\x20\x30\x2e\xa1\x41\x34\xe2\x8c\xb5\xb7\x16\x6b\xcd\x7e\xf8\x33\x86\xc5\x57\x4d\x6f\x2c\x2c\xa3\x15\x14\xfa\x60\x44\x49\x1a\xbe\xa3\xf9\x95\x78\x0d\x89\xef\x95\x69\x68\x3e\x79\x01\xf1\xca\x6a\x99\x67\x91\x87\x47\x41\x2a\xa4\xfd\x69\x71\xf1\xe6\xe2\xfc\x86\x9c\x90\x7f\xcc\xaf\xde\x92\x17\x87\x5d\xbc\xb6\x09\x7f\xf8\xf6\x62\x7e\xa1\xfb\x30\xb3\xcf\x5f\xc8\xcf\xff\xfe\x93\x66\x32\x23\x49\xa1\xc2\x45\x29\x32\xa6\x12\x5f\xaa\x80\x18\x71\x81\xa6\x44\x49\x15\x0a\x7a\x39\x6c\x8c\x87\xed\xee\x5c\xa2\x29\xb0\x3c\xf5\xab\x80\x48\xd5\x6b\x83\x42\x6a\x3c\x6a\xcb\x1e\x99\x34\xf4\x9e\xbf\x43\x9b\x72\x21\xc3\x4b\xd8\xf8\x85\x4c\xeb\xd3\x59\x13\x54\x01\xd2\x34\xbe\xf2\xb4\x9f\x5e\x8e\xd4\xec\xfa\x86\xe2\xe7\xbc\x28\xa9\x00\x32\x6c\xbc\x09\x59\x72\xae\x4d\x53\x2b\x6a\x3b\x41\x37\xc0\x28\x53\xdf\xbd\xc6\x93\xd6\x08\x69\x46\x77\x67\xeb\xe5\x4b\xd7\xb1\x85\x43\xd3\x53\xec\xb0\x68\x1f\xcd\xc1\xe9\xba\x84\xee\x4c\xc7\x91\xd1\xd3\xaf\x36\x0c\xc4\xe1\x1a\xea\xc1\xd1\x4c\xae\xa9\x80\x63\x4b\xec\x46\x47\xb3\xb1\xed\xcc\xcd\xc7\xf2\x60\x99\x43\xd4\xa3\xc5\xea\x84\xb4\xcb\xbb\x93\xa3\x0e\xef\xe0\x8a\x6f\xd8\xf1\x3e\x34\xc3\x35\xa3\xc6\xdd\xc7\x26\x6d\xc4\x7f\x1c\x46\xde\x7f\x18\x0b\x8c\x6d\x70\xfc\x13\xb6\x13\x0f\x0e\x5a\x7f\xaa\x7b\xdc\x38\xb4\xdc\x2f\x31\x2d\x03\x7d\xbd\xa5\x81\xc2\x11\xd7\x01\x02\xdb\x61\x3f\x7d\x9a\xee\x96\x54\x1e\x13\xa8\xb2\x04\x16\x3f\xbe\xd9\x43\x9a\x8d\x30\xc6\xe9\x73\x1a\xe3\xd5\x9f\xd6\x18\xaf\x26\xee\x11\x74\xf7\x70\x68\xc7\x9e\x31\xd6\x20\x27\xda\xcf\x4d\x6a\x6e\x8b\x44\x23\xce\xe4\xc4\x9c\x47\x34\x99\xb5\xd9\xd0\xaa\x02\x84\x95\x21\x92\x5e\xc2\xe6\xe6\xde\x9a\xe6\x1c\xd9\xbe\x17\xc8\xa0\xbe\xce\xf4\x4e\x57\xd3\xc8\xd0\xb8\xcc\x80\xa6\xf5\x75\x1b\xeb\xfd\x85\x31\xba\x8d\x14\xc6\x8b\x22\x53\xe3\x56\xbb\x4f\x48\x9a\x0d\xaf\x6f\x92\x91\x93\x22\x4b\xc3\xb7\xfa\xe2\xa1\xd9\x8e\x42\x5f\x2b\xdb\xdd\x44\xc4\xcc\x69\xf7\xd5\x6f\x83\xe2\xc4\x75\x8a\x70\x0e\x12\xb4\x0a\xd3\x69\x51\x33\x01\x7c\xad\xe5\x15\x8d\xb4\xfd\xed\xb4\xae\x40\x73\xb7\x2d\x9c\xf3\x3c\x5f\xd2\xe8\xf6\xeb\x3c\xf7\x27\xad\x49\x7b\x71\x07\x19\xb1\x86\x71\x83\xd4\x2f\x3b\x1f\x30\xef\xab\x9b\x20\x67\x9d\x8b\x79\xe6\x0f\x1a\x07\xb3\xd8\x15\x97\xca\x3b\x23\xdd\xff\xbc\x9c\x47\x34\xd7\x9f\x82\x9a\x4e\x5f\xf0\x3c\xa2\xfb\xdb\xff\x7f\xf5\xaa\x21\xa9\x13\xe2\x2e\xd1\x2e\x39\xde\x11\x35\xc5\x41\x9b\xcc\x6b\x46\x77\x64\x58\x5e\x1e\x8b\xd3\xa3\x8d\x46\x54\xca\x0d\x17\x71\x97\x53\x33\xba\x23\x43\x6b\xf2\x24\x09\x0b\x7a\x0f\x4c\x89\x0c\xa4\x77\x46\xbc\xaf\xbc\xba\xc6\xc7\xb4\x7e\x01\x0a\xc3\xb2\x2c\x69\x04\xbe\x97\x0a\x4c\xe5\x77\x1f\x6a\xcf\x37\x96\xdc\x6f\x68\x94\xa4\x9d\xdd\xd9\x05\x43\x72\x92\xf3\x34\x34\x6f\xad\xb4\x11\x07\x2f\x61\xf3\x1a\xd6\x35\xe1\x97\x01\xf1\x52\x41\x59\x16\xe9\x0a\x82\x4d\xa9\xd7\xdd\xee\x5d\x95\xdf\x04\xe7\x73\xf3\xb7\xaf\x2a\xd2\xc1\xb5\x2d\x39\x20\x0c\xb3\x0f\xb3\xd3\x58\x33\xb5\xe0\x6a\x1f\xfd\xc5\x6a\x6c\xd8\x46\x6e\x63\x6b\x26\x47\xac\x5a\x71\x79\xec\x1c\x33\x86\x1a\xb5\x8f\x66\xbb\x19\xf1\x74\x43\x04\x44\xac\x5a\xc8\x3d\x21\x27\xc8\x1b\x75\xd2\x05\xde\x25\x6c\x7e\xe0\xe2\xf6\xd1\xd5\xaf\x8e\x0e\xd2\x3a\x0a\x6b\x83\xe9\x75\xad\x74\xa6\xed\x4f\xce\x70\x1d\x7a\x59\x14\x3d\xa8\x26\x91\xfe\xaa\xe5\x3f\xb4\xee\x3c\xd6\x15\x29\x31\xc3\x92\x50\x5d\xa5\x41\xa4\x2f\x57\x55\x12\x62\xa2\x38\xd2\xad\x4d\x57\x57\xff\xcc\x94\x31\x09\x42\xe9\xfb\x58\x75\xfb\x9d\x97\x60\x40\x4a\x86\x4d\xb1\x6d\x0a\x5d\xe2\x9f\xc8\xbb\xfc\x3e\x7c\xfd\x4d\xa7\x28\xee\x4b\xed\x3a\x95\xb2\x9e\x74\x55\x02\xf3\xbd\x92\x4b\x95\x0a\xc0\xea\x2e\x5e\x7e\x3f\x7f\xe3\x47\x49\x3a\x19\x5f\x41\xb7\x6a\xcf\xeb\x8c\xa5\xbf\xa2\xf6\xde\x1d\x35\xad\x57\xed\x16\xd3\xa9\x51\xa2\x65\xb0\xeb\x5a\xbf\xb6\xe5\xcc\x0e\xd5\xc6\x68\xb4\x3e\x6a\x26\xc8\xa6\xdd\x81\x58\xd7\x5b\xe5\x1b\x10\x6c\x23\xe2\xc4\x75\xf4\x3f\x35\xe8\xa3\xd6\x28\x19\xd4\xb8\x38\xf9\xb5\xed\x03\x27\x5e\xf6\x92\xee\xd1\xb1\x01\x8d\x1f\x71\xef\x70\x0a\x42\x62\xef\x24\x83\x95\x7b\x94\x41\xb5\xa9\x94\xfd\x6a\x37\xa0\xd9\xa1\xaf\x37\xa0\xd3\x0d\x40\x13\xcc\x5e\x48\x82\x2b\xc5\xbf\x28\x46\xbf\xd7\x2c\xf0\x39\x5e\xe2\x91\xc1\x27\x29\x73\xcc\x80\x66\x71\x26\xe9\x32\x07\x22\x81\x8a\x68\xf5\x63\x49\xd5\x6a\xa6\xfb\x05\xc8\x2e\xd0\xcc\x4c\x4b\x31\xd0\x8c\xd0\xd3\x76\x1d\x0f\x84\xc5\xff\x04\x00\x00\xff\xff\x46\x3b\xe7\xd9\xee\x31\x00\x00")

func assetsTemplatesServicetestTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServicetestTmpl,
		"assets/templates/servicetest.tmpl",
	)
}

func assetsTemplatesServicetestTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServicetestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/servicetest.tmpl", size: 12782, mode: os.FileMode(436), modTime: time.Unix(1573428663, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6f\xd4\x30\x10\x85\xcf\xf1\xaf\x18\xad\x7a\x00\xa9\x64\xef\x95\x38\x6d\x11\xea\x01\xb4\x82\x72\x42\x48\x1d\x36\xb3\xc6\x34\xb1\xdd\xf1\xf8\x10\x45\xfe\xef\x28\xa1\x81\x24\x2c\xa9\x57\x42\xa8\xa7\x55\x36\xef\xc5\x6f\xbe\x37\xb2\xc7\xc3\x3d\x6a\x02\x61\xb4\xc1\x3b\x16\xa5\x4c\xd3\xff\xc2\x0b\x55\xc4\x68\x2a\xd8\x68\x23\xdf\xe2\xd7\xf2\xe0\x9a\x6d\x40\x71\x6c\xb6\xda\x95\xfd\xab\x8d\x7a\xa9\x94\xb4\x9e\x7a\xed\x76\x0b\x5d\x07\xe5\x8d\x3d\xd6\xe5\x47\x63\x75\xac\x91\xf7\x18\x0e\x58\xef\x30\x10\xa4\x04\x4c\x0f\x91\x82\x00\xda\x0a\x98\x82\x77\x36\x10\x54\x28\x58\xaa\xe2\x09\x6b\x10\x8e\x07\x81\x4e\x15\x45\xd7\xbd\x02\x46\xab\x09\x2e\xee\xa9\xbd\x84\x0b\xcf\xce\xc3\xd5\x6b\x28\x6f\xc7\x11\xf6\xec\xfc\x35\x1d\x43\x4a\x83\x7e\x50\x94\xef\xb1\xa1\x94\x60\x7c\xbc\x6d\x7d\xff\x78\xf7\x3d\x38\x7b\xb5\x19\xff\x9d\x45\xd8\x61\x43\x43\x82\x94\x2e\x5d\x63\x84\x1a\x2f\xed\xe6\xee\x31\x03\xd9\xaa\xff\x7e\x52\x93\xf0\xfb\x3a\x32\xd6\xf3\xe8\x9f\xbf\xac\xcc\x96\xd2\x02\xe1\x8e\x09\x85\xd6\x69\x7c\xa0\x07\x30\xd6\x47\x19\xe1\xe5\x9a\x7e\x51\x04\x00\xb8\xa9\xc8\x8a\x39\x1a\xe2\x61\xa0\x35\xef\xcf\x29\xb3\xd3\x05\x70\x51\xce\x8e\x17\xe6\x25\xaf\xe7\x29\xde\x05\x0d\xd0\x3b\x8c\xd5\x63\x89\x4d\xd0\x8b\x9e\xde\x30\x3b\x5e\xa8\x88\x79\xae\x5a\x56\xf0\x96\x64\xad\xd0\x3f\xe8\x67\xe8\x7f\x4f\xf6\x08\xf2\x49\xcf\x92\x61\x86\xe1\x14\xbe\x13\xd2\xff\x07\x2f\x6f\x79\xb3\x1c\x93\xd9\xa6\x7b\x7b\x82\x66\xe6\x4e\x66\x59\x9e\xc9\x42\x7e\xf2\xd5\xf9\x77\x42\xae\xe9\x2f\x64\x73\x6f\x84\xbc\x63\x96\xf4\x73\x5d\xcf\xa4\x80\x6b\xaa\xe9\xec\x02\x72\x4d\xeb\xab\x9d\xf7\x95\x25\xdf\x5c\xd7\xe4\xec\x7f\x8c\xef\x47\x00\x00\x00\xff\xff\xbd\xf2\x55\x1e\x57\x08\x00\x00")

func assetsTemplatesTransportTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransportTmpl,
		"assets/templates/transport.tmpl",
	)
}

func assetsTemplatesTransportTmpl() (*asset, error) {
	bytes, err := assetsTemplatesTransportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transport.tmpl", size: 2135, mode: os.FileMode(436), modTime: time.Unix(1572989312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransportcnvTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x55\x4d\x8b\xdb\x30\x10\x3d\x5b\xbf\x62\x9a\x93\xbd\x18\xf9\x1e\xf0\xa1\x6c\x3f\xd8\xc2\xa6\xa1\x49\x4f\x21\x14\xc5\x1e\xbb\x22\xfa\x48\x24\xb9\xa5\x35\xfe\xef\x45\xca\x77\xa1\x76\x20\x61\x5b\xe8\x21\x24\xb1\xdf\xcc\xbc\x79\x6f\x46\xda\xb0\x62\xcd\x6a\x04\x67\x98\xb2\x1b\x6d\x1c\x21\x5c\xfa\x6f\x88\x49\x34\xaa\xb9\x13\x6c\x45\x0b\x2d\x33\xc9\xd7\x46\x7f\xc7\x9f\x28\xb2\x15\x2b\xd6\xa8\xca\xac\x5c\x8d\x48\x24\x61\x00\x25\x75\x89\x62\x44\x48\x34\x6a\x5b\x3a\x5d\xd7\x74\xc2\x24\x76\x5d\xc6\x95\x43\xa3\x98\x38\x00\x12\x42\xaa\x46\x15\x10\x1b\xdc\xc2\xc3\xa3\x41\xe6\xb0\x6d\xe9\x93\xaa\x04\x9d\x71\x55\x37\x82\x99\x29\xb3\x05\x13\x8f\xcc\x62\xd7\x7d\xc2\x6d\x02\x73\xfd\xec\xa3\xe3\x04\x42\x16\xda\x17\x00\x2d\x01\x30\xe8\x1a\xa3\xa0\x6d\xe9\xfc\xd0\x31\xdd\x27\x99\x39\xd3\x14\xae\xeb\x48\x77\x62\x62\xaf\x63\x62\x13\x78\x67\xb4\xdc\x71\x91\xf0\x30\x4c\x26\x05\x69\x6b\xb0\xce\x70\x55\xa7\x80\xc6\xf8\x8f\x36\x09\xb4\x24\xe2\x15\x48\x78\x95\x83\xe2\xc2\xff\x8d\x0c\xda\xfe\xc6\xf2\xcb\x7e\x8e\x54\x8e\x1d\x45\x1d\x09\x59\x9e\x6d\x0d\xb9\xaf\x1c\x8a\xf8\xaa\xbf\x95\x79\xeb\x49\x40\xee\x5f\xed\x7e\xc7\x89\x0f\xbe\x54\xe4\x3d\xba\x03\x9d\xa9\x68\x0c\x13\x7d\x62\x58\x58\x2c\x6f\x93\xc3\xa0\xfd\x73\x39\x18\xe7\xb0\x58\xf6\xa5\x6e\x3b\x12\x55\xda\xc0\x97\x14\xa4\x47\x1b\xa6\x6a\x04\x69\xc3\x38\xf8\x81\xb0\xfe\xe9\xa0\x82\x03\x34\x72\x60\x9b\x0d\xaa\x32\xee\x85\xa5\xbe\x5c\x72\xb4\xa3\x37\x5f\x6f\xa2\xbb\xd9\xb9\xbd\xb0\xf3\x5e\x7b\x16\xed\xd7\x6c\x18\xec\x99\x3e\x95\xa8\x1c\xaf\x78\xc1\x1c\xd7\x6a\x0c\x92\x5e\x3e\xf1\x98\x68\x26\x9a\x7a\x0c\xe5\x8a\xce\xf5\xa4\x11\xde\x18\xae\x6a\xdf\xc0\x11\x8c\x86\x7a\x50\x92\x92\x28\xea\xd2\xde\xb1\x7d\xf9\x2d\xde\x8f\xda\xdf\xdf\xe3\x2c\xdb\x49\xc2\xe0\xe1\x75\xe3\xbe\x26\x20\xd9\x1a\x3f\x6f\xca\xe1\x33\xee\xc3\xec\xe3\xe4\x46\x59\xe2\xc5\x72\xf5\xc3\x61\x7a\x92\x29\xcb\xf6\x0b\x78\x15\x85\xb6\xdb\x05\xd0\x33\x9f\x42\xb1\x90\x31\x09\x2f\xc3\xe0\x31\xea\x74\xe0\x3b\xa4\xb9\x8f\x09\xaa\x1c\x46\x1c\x8a\x70\xde\x5b\x60\xd0\xeb\x55\x50\x01\x2a\xa3\xe5\xe9\xee\x84\x6f\x4c\x34\x68\xe9\xf9\x76\x5d\xd3\xd7\xcb\x5c\x64\x57\x29\xfc\x3f\xac\xc0\x99\x3b\x6f\x50\xe0\xfd\xdd\xf9\x27\x8f\xbf\x6b\x5a\xbd\xaf\xfd\xb7\xd9\xf4\x2b\x00\x00\xff\xff\xeb\xee\x2e\x4c\x9a\x0a\x00\x00")

func assetsTemplatesTransportcnvTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransportcnvTmpl,
		"assets/templates/transportcnv.tmpl",
	)
}

func assetsTemplatesTransportcnvTmpl() (*asset, error) {
	bytes, err := assetsTemplatesTransportcnvTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transportcnv.tmpl", size: 2714, mode: os.FileMode(436), modTime: time.Unix(1573069788, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/templates/jsonrest.tmpl":     assetsTemplatesJsonrestTmpl,
	"assets/templates/migration.tmpl":    assetsTemplatesMigrationTmpl,
	"assets/templates/model.tmpl":        assetsTemplatesModelTmpl,
	"assets/templates/repo.tmpl":         assetsTemplatesRepoTmpl,
	"assets/templates/server.tmpl":       assetsTemplatesServerTmpl,
	"assets/templates/service.tmpl":      assetsTemplatesServiceTmpl,
	"assets/templates/servicetest.tmpl":  assetsTemplatesServicetestTmpl,
	"assets/templates/transport.tmpl":    assetsTemplatesTransportTmpl,
	"assets/templates/transportcnv.tmpl": assetsTemplatesTransportcnvTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"jsonrest.tmpl":     &bintree{assetsTemplatesJsonrestTmpl, map[string]*bintree{}},
			"migration.tmpl":    &bintree{assetsTemplatesMigrationTmpl, map[string]*bintree{}},
			"model.tmpl":        &bintree{assetsTemplatesModelTmpl, map[string]*bintree{}},
			"repo.tmpl":         &bintree{assetsTemplatesRepoTmpl, map[string]*bintree{}},
			"server.tmpl":       &bintree{assetsTemplatesServerTmpl, map[string]*bintree{}},
			"service.tmpl":      &bintree{assetsTemplatesServiceTmpl, map[string]*bintree{}},
			"servicetest.tmpl":  &bintree{assetsTemplatesServicetestTmpl, map[string]*bintree{}},
			"transport.tmpl":    &bintree{assetsTemplatesTransportTmpl, map[string]*bintree{}},
			"transportcnv.tmpl": &bintree{assetsTemplatesTransportcnvTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
