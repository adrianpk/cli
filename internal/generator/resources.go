// Code generated for package generator by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/templates/migration.tmpl
// assets/templates/model.tmpl
// assets/templates/repo.tmpl
// assets/templates/server.tmpl
// assets/templates/service.go
// assets/templates/service.tmpl
// assets/templates/transport.tmpl
// assets/templates/transportcnv.tmpl
package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsTemplatesMigrationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x41\x6b\xf2\x40\x10\x86\xcf\x3b\xbf\x62\xbe\xe0\x21\xf9\xd0\x08\x3d\x0a\x1e\x8a\x2d\xa5\xd0\x83\x25\x1e\x0b\x75\x4d\xc7\xb0\x38\xd9\xd8\xc9\x08\x29\x61\xff\x7b\xd9\xd4\x83\x6d\x11\x14\x7a\xcc\x3b\x99\x67\x5f\xe6\xd9\xdb\x72\x67\x2b\xc2\xda\x55\x62\xd5\x35\x1e\xc0\xd5\xfb\x46\x14\x13\x6e\xaa\x04\x60\x3a\xc5\x85\x90\x55\xea\xfb\x09\xe6\x8f\x7e\xcb\xf9\x92\x0f\x62\x79\x69\xdb\xd2\xf2\xc2\xb6\x84\x93\x10\x56\x76\xc3\xa7\x94\xed\xc1\x97\x98\xd6\xf8\xbf\x76\x55\x76\x39\x21\xcd\x90\x44\x1a\xc1\x1e\x8c\x76\x38\x9b\x63\x9d\x3f\x90\xae\xba\x34\x03\x30\xad\xc6\x64\x3d\x70\x8a\xe7\xa7\xfc\x0b\x5b\x68\x5c\x5f\x03\x98\x38\x48\x5e\x7c\x12\xbf\x01\xcc\xeb\x38\xc2\x70\x8e\xda\xe5\xf7\x1d\x95\x69\xab\x19\x18\xb7\x1d\xd2\x7f\x73\xf4\x8e\xe3\x3b\x46\x48\x0f\xe2\x63\x0a\x26\xfc\xc6\xf4\x3d\x8a\xf5\x15\xe1\x68\x47\x1f\x37\x63\x1c\xb5\xef\x5c\xa8\x38\x5f\xc5\x36\x43\x91\x5b\x56\x92\x42\x31\x04\x40\x6c\x15\x8f\x25\x4f\xfe\xfc\xcb\x86\xb1\x11\xf9\x37\x1c\x10\xc7\x91\x77\x0c\x61\xb0\x75\x27\xcd\xfe\x12\x57\xd2\x30\x6f\x6c\xb9\xfb\xa1\xea\xc2\xf5\xeb\x44\x45\xe8\x19\x4d\x67\x4e\x32\xbb\xda\xda\xb7\x43\x7c\x06\x00\x00\xff\xff\xa2\x64\xfa\x07\xd7\x02\x00\x00")

func assetsTemplatesMigrationTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesMigrationTmpl,
		"assets/templates/migration.tmpl",
	)
}

func assetsTemplatesMigrationTmpl() (*asset, error) {
	bytes, err := assetsTemplatesMigrationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/migration.tmpl", size: 727, mode: os.FileMode(436), modTime: time.Unix(1572532722, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesModelTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xdb\x3c\x10\x3c\x8b\x4f\xb1\x10\x02\xc4\xfe\x90\x8f\xba\x07\xe8\x21\x70\x7b\xf0\x21\x45\x50\xb7\x3d\x67\x25\xae\xe4\xad\x29\xae\xc2\x1f\x24\xae\xe1\x77\x2f\xf4\x93\xc4\xb1\x0b\x37\x87\xf6\x66\x2f\x67\x67\x86\xc3\xb1\x3b\xac\x36\xd8\x10\xb4\x62\xc8\x2a\xc5\x6d\x27\x3e\xc2\x4c\x65\xb9\xc1\x88\x25\x06\x2a\xc2\x83\xcd\x15\x40\xde\x70\x5c\xa7\x52\x57\xd2\x16\x01\xa3\x78\x2e\x1a\xd1\x29\xb1\xc9\x95\xca\x8a\xe2\xf0\xdc\x72\x59\x74\x0f\xb9\xca\xda\x61\xcd\xe2\x38\x6e\x79\xe3\xe5\x91\x7e\x92\x2d\x4a\xac\x36\xe4\x4c\x31\xe8\xe6\x6a\xae\x54\xdc\x76\xd4\x0b\x17\x05\xec\x76\x7a\xe9\x6a\xab\x57\xec\x9a\x64\xd1\xdf\x61\xa8\xd0\x2e\x30\xd0\x7e\x3f\x39\xcd\xce\x62\x42\xf4\xa9\x8a\xb0\x53\x59\xd6\xea\xa5\x21\x17\xb9\xe6\x0a\x23\x8b\x53\x59\xb6\xdb\xfd\x0f\x1e\x5d\x43\x70\xb1\xa1\xed\x15\x5c\x74\x5e\x3a\xb8\xfe\x00\xfa\xce\x4b\xf7\x91\xea\xb0\xdf\x4f\x30\xae\xc1\x49\x1c\x11\x7a\x19\x3e\xb5\x25\x19\x43\x66\x3a\x1f\xc7\x9f\xb1\xed\x35\x5f\xbe\x26\x6b\xbf\x6e\xbb\x7e\x74\x6f\xca\xeb\xfc\x79\xbe\x10\x3b\x41\x73\xf8\x11\xc4\xbd\x9e\xbc\xb9\xc7\x02\x5b\x9a\xae\x71\x25\x2d\x47\x6a\xbb\xb8\xcd\xef\x27\x3f\xe4\xcc\x8b\xb7\xf1\x33\x00\x40\xab\x6f\x92\xe1\xa8\xb2\x7d\x1f\x64\x51\xc0\x8a\xe2\xc2\x13\x46\xfa\x8e\x36\x51\x80\x5a\xfc\x98\x9b\x56\x75\x72\x15\xcc\x8e\xd3\x3b\x50\x85\xff\xce\x45\x3b\x3f\xe6\x9e\xcd\x81\xbc\x17\x0f\x3b\x05\x50\x14\xf0\x85\x3a\x8b\x15\xc1\xe5\x19\x89\x21\x07\xbd\x8a\x9e\x5d\x73\x39\x98\x43\x27\x71\x4d\x1e\x92\xe3\x87\x44\xc0\xd3\x93\x91\x1f\x49\x97\x35\xf4\x2b\x60\x84\xc2\xf0\x20\xf4\xc4\x21\x82\x78\xd8\x4a\x82\xce\x53\x4d\xaf\x1c\xe2\x48\x4f\x6b\x11\x1e\xd9\x5a\x28\x09\x52\x20\x33\x28\xad\x6c\x6a\xa0\x21\x47\x7e\xa8\xc3\x84\xbc\x81\xce\x22\xbb\xbe\x38\xec\x9a\x71\x0b\x6d\x10\x78\x14\xbf\x81\x32\x45\xe0\x89\xab\xc5\x0d\x81\x15\xd9\x40\xe0\x96\x2d\x7a\x40\x6b\x21\xd8\xd4\x8c\x31\x13\x56\x6b\x60\x17\x22\xba\x8a\x46\x72\xa9\x21\xae\x39\x80\xa7\x20\xc9\x57\xa4\x87\x92\xb3\x26\x7d\x7d\x52\xf5\x83\x94\xee\xea\xa7\xbe\x94\x79\xcf\xdd\xd5\x4f\xf9\x69\xe7\x4f\xc1\xef\x0c\xfd\x2c\xd5\xd1\x0f\x46\x1f\x3f\xf8\x79\x17\xf3\xf3\xdc\x43\x51\x4f\x28\xe7\x2a\xf3\x14\x93\x77\xe0\xd8\xaa\xfd\x73\x87\xbf\x75\xe6\x9f\x75\xf8\x90\xfb\xa0\xc3\xef\x33\xff\x76\xf9\x37\xe6\x6f\x31\x56\x6b\xa8\xc4\x19\xee\x33\xfc\xab\xe6\x07\xee\x59\xac\xfe\x84\x2b\x45\x6c\x7f\x23\x3f\x15\xe3\x76\xd0\x1f\xb6\x17\x32\xfe\x8f\x4c\xbe\xbd\xda\xab\x5f\x01\x00\x00\xff\xff\xb9\x7c\xe9\xb1\x09\x06\x00\x00")

func assetsTemplatesModelTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesModelTmpl,
		"assets/templates/model.tmpl",
	)
}

func assetsTemplatesModelTmpl() (*asset, error) {
	bytes, err := assetsTemplatesModelTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/model.tmpl", size: 1545, mode: os.FileMode(436), modTime: time.Unix(1572984096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesRepoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4b\x73\xdb\xbe\x11\x3f\x13\x9f\x62\xc3\x89\x1d\xd2\x65\xa8\xa4\x47\xb5\xea\x4c\x6c\x79\x5a\x77\x32\xa9\x1b\x39\xc9\x21\xcd\x24\x30\xb5\x64\x10\x83\x00\x0d\x80\xae\x14\x0d\xbf\x7b\x07\x00\x25\xeb\x65\x51\xae\x95\xf9\xe7\x62\x5a\xdc\xc5\x3e\x7e\xfb\xc0\x2e\x2b\x9a\xdd\xd0\x02\x41\x61\x25\x09\x61\x65\x25\x95\x81\x88\x04\xe1\xf5\xd4\xa0\x0e\x49\x10\x66\x52\x18\x9c\x18\xfb\x6f\x5e\x9a\x90\x90\x20\x2c\x98\xf9\x5e\x5f\xa7\x99\x2c\x7b\x3f\x4a\xc9\x94\x14\x3d\x7d\xcb\x27\xa1\x27\x71\xea\x49\x25\xbb\x51\xf2\xbf\xf8\x13\x79\xef\x9a\x66\x37\x28\xc6\xbd\x4c\x8a\x9c\x15\xdd\x7c\x85\xa2\x82\x65\xb4\xc7\x84\x41\x25\x28\xef\x95\x72\x8c\x3c\x24\x01\x97\x45\x81\x0a\x3a\x8e\x73\x59\x84\x24\x26\xc4\x4c\x2b\xb4\xce\xcc\x66\xe9\x85\xc8\x79\x3a\x62\xa2\xa8\x39\x55\x97\x54\x67\x94\x9f\x51\x8d\x4d\xf3\x1e\x2b\x09\xda\xa8\x3a\x33\x30\x23\x41\x90\x99\x09\xb4\x2e\xa7\x67\xfe\x69\xdf\xe6\x05\x9c\x78\xeb\xed\xdb\x9c\x15\x24\xb0\xc6\xc0\x89\xb7\x28\x7d\xeb\x1e\x24\x08\xae\x26\x00\x27\x16\x8d\xf4\x6a\x42\x82\xc6\x9a\x91\xd7\x22\x83\x92\xde\x60\x97\x1d\xd1\x16\xe5\x09\x6c\xea\x4e\x60\x53\x75\x02\x66\xb2\x50\x1c\xc3\x49\xa7\xcf\x33\x12\x28\x34\xb5\x12\x70\xdc\xc5\xdb\xe2\xd2\x87\xcc\x4c\x12\x8f\x46\xdf\x9a\x95\x78\x10\xfa\xd6\x9c\xc4\xf9\xde\x07\x70\x2c\x0d\x69\x08\xe9\xf5\xe0\x4c\x21\x35\x08\x14\x66\xb3\xf4\x3d\xea\x77\xb4\xc4\xa6\x81\xd4\x43\x12\xad\xeb\x3d\xa3\x25\x2e\x9b\xd8\xe9\x44\xdc\x2a\xd8\x25\x09\x4e\x5c\xf2\xa4\xbb\x64\xc5\x80\x4a\x49\x65\x31\xd9\x21\x29\x1d\xa1\xf1\xfa\x3e\x52\x5e\xa3\x8e\x62\x42\x02\x6d\xa0\x3f\x80\x6f\xb3\x59\x3a\xfa\xf7\xdb\xf4\x42\x68\x54\x66\x64\x9a\xe6\x1b\x21\xc1\xd7\xc4\xca\xb5\xf4\x0e\x4f\xd3\xab\x49\x6a\xb1\x19\x9f\x4f\x30\x8b\xb4\x49\x76\x1d\xb0\x5a\xdb\xc8\xa1\x52\x2d\xd0\x7f\x47\xf3\x86\xf3\xc5\xb1\x4b\x5e\x2b\xca\x97\x5d\x84\x5c\xc9\xd2\x95\xf9\x01\xd1\xf7\x5a\xa3\xf8\x5e\x98\x57\xbc\x0c\xff\xe7\x2f\xdd\xf8\x7b\x9c\x5c\x0c\x62\x1b\x84\x55\x50\x47\xc8\x31\xb3\x8a\xe6\xb8\x5a\xe6\xbd\x30\xf5\x27\xa3\xe3\x07\xad\x4b\x40\x9b\x25\x3c\x77\xf0\xad\x40\xbd\x9a\xce\xd7\x53\xb8\x18\x1e\x16\xd5\x88\x8d\xc1\x35\xbf\x9c\x66\x38\x6b\x62\x88\xf6\x04\xb1\x05\xf0\x8e\xaa\x5d\xf8\x40\xb7\xb4\x8d\xd4\xf6\x58\x9e\x4e\x2f\x86\x3e\x0c\x96\x3c\x80\xbc\x34\xe9\xa8\x52\x4c\x98\xdc\xe5\x2d\x1b\xa7\x91\x36\x8a\x89\x22\x8e\xdb\x48\xed\x97\xfe\xd6\xe9\x8d\x46\xd4\x1d\xa9\xad\x9c\x2b\xb1\x3a\x9d\x8e\x78\x5d\x80\x76\xe6\xeb\x8d\xc8\x69\x5e\x17\x87\x8d\x9d\x57\x18\x69\xa7\xd5\x43\xf1\x1b\x85\xcf\xda\xb6\x2b\x80\xd6\xec\xdf\x21\x72\x1f\xaa\x31\x35\xb8\x1a\xaf\x03\xc6\xc9\x8b\x3f\xe0\xbd\xa1\x30\xdf\xbb\xdb\x5b\xc4\x76\xdd\x33\x17\xc3\x74\xe4\x12\x27\x8a\x63\x12\xb0\xdc\xc9\x7d\x36\x00\xc1\xb8\x9b\x51\x5a\x24\x6d\xe8\xce\xad\xfe\x3c\x0a\x33\x2a\x84\x34\xa0\xd0\x28\x86\x77\x76\x9e\xcb\x51\xa1\xc8\x70\x97\x31\x7d\x38\xd2\xa1\xb3\xda\xcb\x71\xea\x6c\xea\x74\x5c\x82\x1e\xbc\xa5\x4b\xb0\xd7\x83\xd3\x9a\xf1\x31\xd4\x8e\x02\xda\x50\x83\x25\x0a\x43\x82\xec\x3b\x15\x05\xea\x04\x6e\xcd\xb4\x03\x9b\x33\xcf\xba\x0b\x9a\x04\x8e\x15\xe6\x31\x09\x2a\xa9\xad\xb4\x57\x24\xe0\xd4\x27\xba\x95\xff\x57\xf8\x33\xf1\xd5\xa3\x0d\xb8\x09\x36\x3d\xad\xf3\xdc\x0e\x66\xda\xa4\x9f\x14\x33\xd8\x02\x1b\x7e\xb8\x1c\xbe\xb9\x3a\x5f\xeb\xf8\x23\x41\x6f\xb0\x0d\xff\xe8\xfc\x0a\x42\xeb\x5c\x2e\x15\x54\x09\xe8\xca\x6a\x51\xd6\x44\x68\x9d\x72\xc1\xb0\xda\x2a\xaa\x0c\xa3\xbc\x2d\x77\x12\xd8\x98\x39\xbb\x2c\x43\x30\xa7\xae\x16\x5b\x78\x74\x07\x03\x38\xba\x83\x30\xf1\xe2\xad\xae\xa0\x01\xe4\x1a\xf7\x39\x97\x2c\x1d\x0c\x5c\xd4\xd6\x7d\x6c\xcf\x3b\xb9\x16\xaf\x01\xd8\xbf\x7f\x82\xd7\x76\x6c\xa3\xae\xfa\xdd\x6b\x87\xdd\xcb\xd7\x3e\xf4\x6b\x32\x56\x34\x7f\xfa\xc7\xf9\xfb\x73\x60\x63\x18\xc0\x8b\x23\xfd\xe2\x2f\xe1\xce\x39\xe5\x3e\x8d\x6d\x5a\x3d\x72\x02\x5a\x14\x40\xb2\x39\x9e\xae\xcd\x42\xbf\x4a\xb2\xcd\x6a\x2e\x8b\x74\x88\xd7\x75\x91\x47\xe1\xae\x46\xb0\x91\xf8\xfd\xff\x08\x57\x5b\xb7\x35\xaa\xe9\x52\x35\xaf\x8f\x6e\xae\xa1\x3d\xa5\x26\xc0\x16\x85\xc2\x7c\xbf\x76\x15\x95\xb4\xfa\xec\xb3\xf4\x8b\x7f\x24\x76\xce\x70\x97\xce\x3c\xa9\xfb\x03\xb7\xac\x6c\xb2\x7a\xb0\x5f\xb6\x35\xf0\xfc\x06\xa7\x09\x3c\xaf\x94\x74\x85\x91\x5e\x2a\x59\x0d\x31\xd7\xd0\x34\x9e\x8d\xe5\x10\x09\xf4\x1c\xe9\x95\x5d\xc5\xc2\x4a\xb1\x92\xaa\xe9\xd7\x1b\x9c\x86\xf1\x32\xa3\x54\x10\xe1\xed\x0a\x6f\x5d\xb3\x71\x18\x6f\xbc\xf6\xa6\x6c\x21\xb8\x25\x75\xf3\xf5\xb5\x94\x1c\xa9\xd8\x42\xb1\xf3\x55\x81\x6a\x0b\x25\xe7\x92\x6e\x93\x35\xc6\x8c\x95\x94\x87\xb1\xb5\x9c\xe5\x16\xf6\x74\x36\x6b\x59\x1e\x40\x1d\x9a\xe6\x9e\xe7\x23\xe5\x6f\xb2\x0c\xb5\x96\x0a\x9a\xc6\xb6\x74\x4b\x7a\x38\xb2\x4f\x92\xee\xb6\x36\x1f\xd3\xcf\xe1\x82\xe9\x4c\x72\x57\x0e\xd0\x34\xe1\x17\x18\x40\xd8\xdf\x4a\xb2\xcd\xc0\x05\x07\xc5\x78\x39\x50\x6b\x88\xfc\xd0\x52\x84\xd0\xc2\xf1\x4c\x61\x6e\x87\x8c\x74\x88\x58\x9d\xdf\xd6\x94\x47\x9b\x08\xcd\x6d\x5f\x4e\x5f\x07\xc2\xff\xeb\xbf\xcb\x5d\xab\x9e\xe9\x7f\x8e\xfe\xf5\x2e\x7a\x92\xb0\xfb\x4a\xf5\x2d\xf8\x09\xf8\x59\x00\xf7\xc2\xf0\x9a\x09\xaa\xa6\x0b\x14\x39\x8a\x27\xfa\xf0\x40\x42\xc4\xf0\x37\x78\x05\xc7\xc7\xfb\xc5\xe9\x51\xa2\xf7\x0a\x61\x0b\xcd\xc3\xe6\xfd\x92\x84\xdd\xd2\x59\x6c\xa7\xde\x56\xdd\xd4\xa0\x61\xe5\x36\xd2\x8e\xd7\xda\xd0\xb2\xda\x45\x33\x3f\xdb\x56\xd7\x56\xc8\xde\x80\xa4\x3e\x34\xfb\x76\x88\x3f\x06\xde\x35\xaf\x0b\x94\x5c\x66\xd4\xb0\xa5\xb6\xf0\x28\x9f\xe7\xf5\xb7\xe8\x8d\x4f\x72\xfa\x5e\xdc\xe1\x9d\xdf\xf6\x7f\x7b\xb7\x2f\x66\x5e\x5b\xcb\xed\x8f\xd8\xde\xf6\x76\xb1\x19\x22\xc7\xf5\xc5\xe6\xfe\xe3\xcc\xc1\x3f\x26\x78\x75\x11\x1b\x2f\x76\xd1\xc5\xca\xb2\xba\x20\x7a\xc6\xee\xfd\x3e\x7e\xec\x87\xad\x76\xee\xda\xfa\xd9\x6a\xae\xd4\xad\xe8\x63\xf7\x63\xfd\x63\xe1\x0a\x34\x07\xde\xd6\x97\xd5\xaf\x2e\xec\x1d\x20\xed\xbb\x45\x1f\x0c\xa8\x33\x59\x96\xcc\x80\x51\x54\x68\x9a\xd9\xfa\x3a\xe0\x37\x54\x27\x3b\x5a\x59\x66\xbb\x56\xf5\xb9\xcd\xf3\xb3\xa4\x21\xff\x0b\x00\x00\xff\xff\x1f\xb9\x11\x6e\x4b\x18\x00\x00")

func assetsTemplatesRepoTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesRepoTmpl,
		"assets/templates/repo.tmpl",
	)
}

func assetsTemplatesRepoTmpl() (*asset, error) {
	bytes, err := assetsTemplatesRepoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/repo.tmpl", size: 6219, mode: os.FileMode(436), modTime: time.Unix(1572970985, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4d\x4f\xe3\x3e\x10\xc6\xcf\xf1\xa7\x18\xf9\xf2\x4f\x50\x48\xee\x7f\x89\x03\xea\x6a\x81\x05\xed\x46\x05\x96\xb3\x99\x4e\x6b\x8b\xc4\xce\xda\x63\x68\x15\xe5\xbb\xaf\x9c\xf0\xd2\x7d\x11\x45\x7b\xa8\x64\x4f\xfd\x7b\xec\xe7\xf1\x38\xbd\xc2\x07\xb5\x21\x18\x06\xa8\x9a\x87\x4d\x75\x4d\xfe\xd1\x20\x35\x8a\x35\x8c\xa3\x10\xa6\xeb\x9d\x67\xc8\x45\x26\xd1\x59\xa6\x2d\x4b\x91\x49\x4b\x5c\x6b\xe6\x5e\x0a\x91\xc9\x8d\x61\x1d\xef\x2b\x74\x5d\xbd\x71\xc7\xa8\x4d\x8d\xda\x48\x51\x08\x81\xce\x86\x89\x4d\xea\x17\x76\xdd\x56\xd7\xc6\x6e\x62\xab\xfc\x95\x7b\x22\x8f\x2a\x10\x8c\xe3\x82\xb7\x97\xb4\x83\x67\xf9\x34\x3c\x01\xf9\x2e\x31\x89\xd7\x35\x2c\xa9\x6f\x15\x12\xe4\x08\x47\x0b\x67\x59\x19\x4b\xbe\x80\xfb\x1d\xec\x5c\xf4\x80\x31\xb0\xeb\x20\xb0\x8f\xc8\x69\xbd\xf3\x69\x97\x47\xf2\x0c\xac\x09\x3a\x62\xed\x56\x60\x2c\x3b\x50\xb0\x8e\xc8\xc6\x59\x30\xeb\x44\xc3\xca\xd9\xff\x18\x2c\xd1\x0a\xd2\xdf\xcc\x0a\x35\x18\xae\xc4\x3a\x5a\xfc\x7d\xc7\x4e\x3d\xd0\x29\xa2\x8b\x96\x4f\x9b\x8b\xa5\x8b\x4c\x3e\xef\x95\x27\xcb\x80\xda\x54\x73\xa5\xd8\x1b\xc3\x20\x32\x4f\x1c\xbd\x85\x79\xdd\x5c\xcf\x65\x3d\x0c\xb3\xf1\xa6\x8d\x5e\xb5\xaf\xb6\xc7\x51\x96\x90\xf6\xce\x51\xff\xa2\x39\x88\x2c\x43\x5d\x35\x2e\x70\x2e\x6b\x59\x02\x56\x0b\x4f\x8a\xe9\x8f\x08\x1b\x15\x50\xb5\x8b\x39\xc3\x2f\xd7\xdf\xbe\x16\x33\x7a\x46\xaf\xe4\x19\xf1\x87\xb1\xb7\x03\xcb\x41\x8e\xe3\xbb\x37\x36\x0c\x72\x94\x6f\x16\xc2\x5f\x3c\x64\x01\x75\x75\x1b\x28\x3f\xd4\x2c\xc5\xcb\xe2\x7f\x39\xf7\x04\x36\xf1\x15\xbc\xed\x57\x1f\x8e\x6a\x62\x3f\x51\x4b\x93\xed\x09\x9f\x67\x1f\xc3\xc7\x42\xa4\xdf\x28\xe6\x16\x3a\x64\x33\xb7\xb4\x65\x48\xaf\xac\x3a\x57\x76\xd5\xa6\x9c\xf6\x67\x7b\x1d\xb4\x5f\xfe\x9c\xf2\x9d\x42\x7e\x9a\xeb\x4b\x0a\xbd\xb3\x81\xee\xbc\x61\xf2\x25\x78\x38\x7a\xae\xff\x88\x14\x78\x0e\x3f\xb4\x71\x03\xff\x9f\x4c\x97\x72\xbb\xbc\x6a\x94\x57\x5d\xee\xcb\x03\xef\xf0\x38\x61\x72\x6a\x07\xde\x4e\xf8\xfc\x86\xab\x3b\xc3\xfa\xbb\x6a\x23\xe5\xbe\x5a\xcc\xb5\xbc\x28\x0f\x5a\xbe\xa4\x5d\x09\x49\x33\x49\x26\xfb\xd3\xe7\x88\xce\x6f\x6e\x9a\xfc\xa9\x04\x3f\xe9\xbe\xe8\x21\x6f\x8b\x97\x44\x7f\x06\x00\x00\xff\xff\xd9\x80\x76\x57\xc6\x04\x00\x00")

func assetsTemplatesServerTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServerTmpl,
		"assets/templates/server.tmpl",
	)
}

func assetsTemplatesServerTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/server.tmpl", size: 1222, mode: os.FileMode(436), modTime: time.Unix(1572867572, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServiceGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\xc1\x8e\xda\x30\x10\x86\xcf\xf6\x53\x4c\x39\xac\x92\x15\x0a\xf7\x4a\x1c\xb6\x4b\x85\x90\x5a\x15\x2d\xea\x03\x58\x61\xc8\x5a\x6b\xec\x30\xb1\x5b\x55\x28\xef\x5e\xc5\xde\x2e\x2c\xc8\x09\x84\x42\x7b\x42\xc4\xbf\xff\x19\xdb\xdf\x8c\x5d\x8a\xfc\x45\x14\x08\xdb\x6d\xb6\x40\xfa\x21\x73\x9c\xbf\x14\x73\x61\x9f\xeb\x9a\xf3\xdc\xe8\xca\x42\xc2\x59\x4e\x28\x2c\x36\x1a\xa9\x0b\xa7\x04\xcd\x45\x95\x0b\xf5\x28\x2a\xac\xeb\xcf\x44\x30\x86\x41\x2e\xb4\x36\x16\x82\x14\xf6\xb4\x5f\xcc\x4f\xa4\xdc\x4b\x07\x9c\x15\x68\x1f\x94\xda\x6e\xb3\xb9\x72\x24\x54\xdc\xa8\x40\x1b\x71\x01\x25\x2b\x1b\xac\x4e\x4a\x29\xee\x34\xe0\xcc\x95\xcb\x53\x97\x16\xa4\x71\xab\x25\x2a\x3c\xd1\x2a\x48\xa3\x56\x29\xe7\x2b\xa7\x73\x48\x04\xdc\x3f\x38\xfb\x9c\xc2\x63\xdb\x09\x24\x84\x9b\x76\xc5\x13\x6e\x86\x40\x58\xc1\x7d\x87\xac\x4a\x01\x89\x0c\xc1\x96\xb3\xd1\x08\xbe\x9a\x25\x2a\xce\x1c\x7c\x1c\x03\xe1\x26\xb3\xc6\x7f\x49\x52\xee\x87\x9f\xb0\x34\x9c\x11\x96\x66\xd8\x4c\x6b\x54\x22\xdb\xf3\x7e\x14\x6b\x7c\xb3\x2e\x4d\x92\x72\x26\x57\x5e\xf9\x61\x0c\x5a\xaa\x26\x0a\x23\xac\xb2\x15\x99\x75\x70\xd6\x52\x0d\xa1\x8b\x37\x1f\x2d\xf5\x73\xad\x23\xdd\xfc\xe3\xac\xe6\x9c\xa1\xdf\xe5\x26\xa1\x2c\x2c\x34\xb9\x73\x37\x0d\x6a\xd6\x6b\x69\xaf\xbf\xce\xd1\x08\xbe\x39\x5b\x3a\xcb\x0f\x6c\xef\xdc\x10\x06\x83\x61\x13\x34\xe5\x7f\xa6\x69\xa9\x78\x7d\x84\xd4\xd4\x97\xcf\x71\x19\x7a\x9a\x62\x83\x3b\x90\xe2\x8a\x03\x86\xae\x05\x49\x7b\x27\x89\x6e\x9d\xab\xde\xd2\xf0\x47\x36\xf5\x36\xd7\x8e\xda\x9f\x91\x9e\x01\xa3\x84\x34\xeb\x3f\x8b\x90\x68\xc7\x89\x0f\x1f\x52\xf2\x3f\xf7\x9a\xd6\x5b\x24\x4e\x51\x48\x62\xc7\xd0\xa7\x5f\x0b\xe5\x8a\xc4\x65\xcd\x4f\xb6\xb0\x24\x75\x71\xdd\x14\x2e\x42\xea\x1f\xf5\x9c\xef\x6d\xb7\xad\x87\xaa\x55\xb1\xe3\xaa\x43\x76\xa3\x16\xd4\xf5\x78\x68\xdb\xcb\xe9\xfb\x57\xc9\x5e\x0a\x9c\xe5\x8e\x08\xb5\x3d\x6a\x54\xaf\x90\x35\xd5\x31\x5b\xa2\xb6\x72\x25\x91\x3c\x71\xb7\xc8\x38\xdc\xa8\x20\x60\x1d\xad\x54\xe6\xb2\xd9\x04\xc6\xf0\xba\x80\x6c\x36\x09\x53\xc3\x71\xbd\x63\x36\x7c\x3a\xe3\x7e\xee\x9d\x7a\xff\x42\xb9\x64\xb7\x2e\xae\x95\x49\xdb\x73\xd2\xd7\x4a\xab\x62\x57\x2b\x1d\xb2\x1b\xd5\x4a\xd7\xeb\xf8\x94\xe3\x0b\x2b\xb9\xbc\x0a\xfe\x46\x2e\x67\xa2\xd4\x3b\x64\x14\x25\x6f\x1b\x61\xe9\x77\x00\x00\x00\xff\xff\x4d\x13\xda\x4d\xd7\x0d\x00\x00")

func assetsTemplatesServiceGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServiceGo,
		"assets/templates/service.go",
	)
}

func assetsTemplatesServiceGo() (*asset, error) {
	bytes, err := assetsTemplatesServiceGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/service.go", size: 3543, mode: os.FileMode(436), modTime: time.Unix(1572873927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServiceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\xcf\x6e\xdb\x30\x0c\xc6\xcf\xd6\x53\x70\x3e\x14\x76\x11\xd8\xf7\x01\x39\x6c\xed\x56\x04\xd8\xb0\xa2\xd9\x1e\x40\x55\x18\x4f\x88\x2c\xb9\x94\xb4\x62\x2b\xf2\xee\x83\xa5\xfe\x4b\x56\xc7\x6e\xb2\xb9\xdd\x29\x88\xfd\xe9\x23\x25\xfe\x48\xab\xe1\x62\xc5\x2b\x04\x8b\xf4\x43\x0a\x64\x4c\xd6\x8d\x21\x07\x19\x4b\x5c\x03\x69\x25\x9d\xe2\x97\x85\x30\x75\x59\xcb\x15\x99\x6b\xfc\x85\xaa\xbc\xe4\x62\x85\x7a\x51\x56\xc4\xb5\x14\xbc\x6c\x56\x55\xc9\xbd\xfb\x5e\x3a\xe2\xda\xb6\xeb\x53\x96\x33\x26\x8c\xb6\xc1\x49\x10\x72\x87\x37\x37\xc5\x4c\x2f\x55\x31\x97\xba\xf2\x8a\xd3\x39\xb7\x82\xab\x13\x6e\x71\xbd\xfe\x40\x04\x53\x48\x05\xd7\xda\x38\x88\x7a\xd8\x5e\xf0\xc9\x5c\x23\x89\xa0\x4f\x59\x52\xa1\x7b\xa7\xd4\x70\xd3\x0a\xdd\xbd\xe3\xb9\xf2\xc4\xd5\x23\x3f\x50\xd2\xba\x68\xda\xe7\x08\xd0\x61\xfa\x74\x9a\xbe\x59\x3c\x6b\xef\x51\xdf\x63\xba\x40\x85\xcf\x31\x8d\xfa\xdd\xa6\x39\x63\x4b\xaf\x05\x64\x16\x8e\xe7\x91\x86\x1c\x4e\x7a\x2b\x97\x11\x5e\x81\x6b\x8a\x7e\xe5\x05\x5e\x4d\x80\xd0\xc2\xf1\x40\xb9\xcd\x01\x89\x0c\xc1\x0d\x4b\xca\x12\x3e\x9b\x05\x2a\x96\x78\x78\x3b\x05\xc2\xab\xe2\xab\x09\x4f\xb2\x9c\x85\xd7\x17\xd8\x18\x96\x10\x36\x66\xd2\x2e\x6b\x55\xb6\xd8\x0e\x70\xc2\x6b\xbc\xf7\x6f\x4c\x96\xb3\x44\x2e\x83\xfc\xcd\x14\xb4\x54\x6d\xa8\x84\xd0\x16\x1f\xc9\xd4\xd1\x5e\x4b\x35\x81\x41\x04\x87\xb8\x79\x30\x70\x9e\x74\xfb\x8f\x25\x6b\xc6\x12\x0c\xc5\x68\x53\xbb\xdd\x77\x76\xe4\xc7\x8f\x6c\xea\x5a\xba\x91\x76\x5c\x96\xf0\xc5\xbb\xc6\x3b\xb6\xe5\x7d\xe4\x27\x90\xa6\x93\x36\x72\xce\xee\x96\x69\xa9\xd8\xfa\x29\xfc\xce\x1e\xda\x31\xb6\xec\x53\xe4\xed\x14\x6d\x40\xd7\xa3\xdc\xe2\xed\x9f\x02\x35\x68\x7a\x75\x1e\xaf\xb7\xf7\x29\x85\xda\x9e\x05\xb7\x91\x82\xef\xcf\xd4\x61\x71\x3b\x99\x6a\x4f\x63\x2f\xa6\x76\xcd\xb3\x1e\x59\x17\x57\xaf\x7e\x92\xf5\x7f\xe1\xba\xa9\x8b\xe9\x3c\x30\xf7\xfe\xe7\x5c\xf9\x2a\xf3\x45\xfb\x53\xcc\x1d\x49\x5d\x8d\x90\xc7\x41\x00\xbe\xf0\x44\xfb\xd6\x7b\x1d\xb8\x03\xb0\x5f\xb9\xc1\xe0\x10\xf9\x98\x03\x6e\xd0\xbd\x67\xd7\x69\x9f\xa1\x03\x2e\x84\xf1\xda\xb1\x44\x78\x22\xd4\xee\x8f\xa9\x77\x4b\x60\xdb\x44\xb3\x05\x6a\x27\x97\x12\x29\xe0\x38\x5a\x9e\xf1\x8b\x0e\x1c\xea\xce\xae\x4e\x7c\x31\x3b\x85\x29\xdc\xee\xa2\x98\x9d\xc6\xa5\xb1\x66\x1b\x40\xc7\x47\xcf\xb8\x1f\x1c\x96\xff\xfe\xad\x74\xf0\xb9\xfd\x8d\x6e\x3a\xed\xbd\x07\xdf\x75\x53\xbf\x72\xa3\x9b\x86\xc8\xff\x9f\x6e\x7a\x54\xe5\xb8\xb1\x97\x6e\x9b\x57\x87\x5d\xf0\xee\xe0\xee\x77\x00\x00\x00\xff\xff\xe1\xba\x8c\x80\x23\x0f\x00\x00")

func assetsTemplatesServiceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServiceTmpl,
		"assets/templates/service.tmpl",
	)
}

func assetsTemplatesServiceTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServiceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/service.tmpl", size: 3875, mode: os.FileMode(436), modTime: time.Unix(1572996261, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6f\xd4\x30\x10\x85\xcf\xf1\xaf\x18\xad\x7a\x00\xa9\x64\xef\x95\x38\x6d\x11\xea\x01\xb4\x82\x72\x42\x48\x1d\x36\xb3\xc6\x34\xb1\xdd\xf1\xf8\x10\x45\xfe\xef\x28\xa1\x81\x24\x2c\xa9\x57\x42\xa8\xa7\x55\x36\xef\xc5\x6f\xbe\x37\xb2\xc7\xc3\x3d\x6a\x02\x61\xb4\xc1\x3b\x16\xa5\x4c\xd3\xff\xc2\x0b\x55\xc4\x68\x2a\xd8\x68\x23\xdf\xe2\xd7\xf2\xe0\x9a\x6d\x40\x71\x6c\xb6\xda\x95\xfd\xab\x8d\x7a\xa9\x94\xb4\x9e\x7a\xed\x76\x0b\x5d\x07\xe5\x8d\x3d\xd6\xe5\x47\x63\x75\xac\x91\xf7\x18\x0e\x58\xef\x30\x10\xa4\x04\x4c\x0f\x91\x82\x00\xda\x0a\x98\x82\x77\x36\x10\x54\x28\x58\xaa\xe2\x09\x6b\x10\x8e\x07\x81\x4e\x15\x45\xd7\xbd\x02\x46\xab\x09\x2e\xee\xa9\xbd\x84\x0b\xcf\xce\xc3\xd5\x6b\x28\x6f\xc7\x11\xf6\xec\xfc\x35\x1d\x43\x4a\x83\x7e\x50\x94\xef\xb1\xa1\x94\x60\x7c\xbc\x6d\x7d\xff\x78\xf7\x3d\x38\x7b\xb5\x19\xff\x9d\x45\xd8\x61\x43\x43\x82\x94\x2e\x5d\x63\x84\x1a\x2f\xed\xe6\xee\x31\x03\xd9\xaa\xff\x7e\x52\x93\xf0\xfb\x3a\x32\xd6\xf3\xe8\x9f\xbf\xac\xcc\x96\xd2\x02\xe1\x8e\x09\x85\xd6\x69\x7c\xa0\x07\x30\xd6\x47\x19\xe1\xe5\x9a\x7e\x51\x04\x00\xb8\xa9\xc8\x8a\x39\x1a\xe2\x61\xa0\x35\xef\xcf\x29\xb3\xd3\x05\x70\x51\xce\x8e\x17\xe6\x25\xaf\xe7\x29\xde\x05\x0d\xd0\x3b\x8c\xd5\x63\x89\x4d\xd0\x8b\x9e\xde\x30\x3b\x5e\xa8\x88\x79\xae\x5a\x56\xf0\x96\x64\xad\xd0\x3f\xe8\x67\xe8\x7f\x4f\xf6\x08\xf2\x49\xcf\x92\x61\x86\xe1\x14\xbe\x13\xd2\xff\x07\x2f\x6f\x79\xb3\x1c\x93\xd9\xa6\x7b\x7b\x82\x66\xe6\x4e\x66\x59\x9e\xc9\x42\x7e\xf2\xd5\xf9\x77\x42\xae\xe9\x2f\x64\x73\x6f\x84\xbc\x63\x96\xf4\x73\x5d\xcf\xa4\x80\x6b\xaa\xe9\xec\x02\x72\x4d\xeb\xab\x9d\xf7\x95\x25\xdf\x5c\xd7\xe4\xec\x7f\x8c\xef\x47\x00\x00\x00\xff\xff\xbd\xf2\x55\x1e\x57\x08\x00\x00")

func assetsTemplatesTransportTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransportTmpl,
		"assets/templates/transport.tmpl",
	)
}

func assetsTemplatesTransportTmpl() (*asset, error) {
	bytes, err := assetsTemplatesTransportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transport.tmpl", size: 2135, mode: os.FileMode(436), modTime: time.Unix(1572989312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransportcnvTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x56\x5b\x6b\xdb\x4c\x10\x7d\xd6\xfe\x8a\xf9\xf2\x24\x05\x7d\xab\xf7\x80\x1e\x4a\x7a\x21\x85\xa4\x21\x4e\x9f\x42\x28\x6b\x69\xa4\x2e\xde\x8b\x3d\xbb\x6a\x69\x85\xfe\x7b\x59\x59\xf1\x25\x04\xc9\x60\x37\x94\xd6\x60\x6c\x4b\x33\x73\xce\x9c\x3d\x33\xf2\x52\x14\x0b\x51\x23\x78\x12\xc6\x2d\x2d\x79\xc6\xa4\x0e\x9f\x10\xb3\xe8\xac\x96\x5e\x89\x39\x2f\xac\xce\xb4\x5c\x90\xfd\x8e\x3f\x51\x65\x73\x51\x2c\xd0\x94\x59\x39\x3f\x9b\x8c\xa9\x49\x18\x59\x88\x4c\x1a\x8f\x64\x84\xca\xb4\x2d\x51\x9d\xb1\x48\xc3\x44\xe6\x10\x98\x30\x56\x35\xa6\x80\x98\x70\x05\xe7\x97\x84\xc2\x63\xdb\xf2\x2b\x53\x29\x3e\x93\xa6\x6e\x94\xa0\x5b\xe1\x0a\xa1\x2e\x85\xc3\xae\xbb\xc3\x55\x02\xf7\xf6\x3a\x64\xc7\x09\xf4\x55\xf8\x58\x02\xb4\x0c\x80\xd0\x37\x64\xa0\x6d\xf9\xfd\x93\x10\x7c\x28\x32\xf3\xd4\x14\xbe\xeb\x58\xb7\x65\xe2\x0e\x63\xe2\x12\x78\x4f\x56\xaf\xb9\x68\x38\x9f\x26\x93\x82\x76\x35\x38\x4f\xd2\xd4\x29\x20\x51\x78\x5b\x4a\xa0\x65\x91\xac\x40\xc3\x7f\x39\x18\xa9\xc2\xcf\x88\xd0\x8d\x37\x96\xef\xf7\xb3\xa1\xb2\xe9\x28\xea\x58\x5f\xe5\xda\xd5\x90\x07\xe4\x1e\x24\xa0\x3e\x83\x79\x17\x48\x40\x1e\x6e\xad\xbf\xc7\x49\x48\xee\x18\xcb\x32\xa8\xd1\x3f\xd1\xb8\x55\x0d\x09\xb5\x47\xe2\xff\xe3\x5f\xbb\xb2\x7f\x18\x03\x7b\xae\xb8\x83\x87\xc7\xe3\x34\x27\x74\x23\xbd\x5d\xe4\xf0\xf0\x38\x56\xba\xed\x58\x54\x59\x82\x2f\x29\xe8\x10\x4d\xc2\xd4\x08\xda\xf5\x9e\x0b\xae\x73\xe1\xea\xe4\x31\x4d\xd0\xc8\x41\x2c\x97\x68\xca\x78\x34\x2c\x0d\x70\xc9\xe6\xcc\x47\xeb\x8d\x16\x3a\xb1\x67\x5e\xb4\xee\x09\x5c\xb3\xe3\x9b\xd5\x9e\x6f\x4e\xb5\x35\xa2\x61\x69\x4c\x07\x07\x49\xae\x4a\x34\x5e\x56\xb2\x10\x5e\x5a\x73\x01\x9a\xef\x5f\x09\x31\xd1\x4c\x35\xf5\x05\x94\x73\x7e\x6f\x6f\x1a\x15\x1c\x20\x4d\x1d\x1a\xd8\x04\x23\xf1\x10\x94\xa4\x2c\x8a\xba\x74\x10\xf4\xe5\xf9\x78\xfd\x9d\x34\x78\xfa\x8f\xd8\x4a\xcd\xb2\x9c\xd8\xcf\x27\x30\x19\xcb\xb2\xb5\xf6\x02\xce\xdf\x34\xfe\x6b\x02\x5a\x2c\xf0\xf3\x24\xf4\x1d\xba\x8f\xb3\x4f\x37\x47\xea\x1f\x3f\x3c\xce\x7f\x78\x4c\xb7\xe7\x91\x65\xc3\x4a\x39\x88\x42\xdb\xad\x13\xf8\x8e\x21\x7a\xb0\xbe\x62\xd2\xdf\xec\x1d\x2e\xb8\xb7\x3d\xdf\xa9\xc3\x0d\x39\x6b\xf9\x87\x59\x82\xa2\x7f\x4c\x3a\x10\x30\x7a\x14\xbd\x0a\x50\x91\xd5\xdb\x7f\x22\xf0\x4d\xa8\x06\x1d\xdf\x1d\xe3\x43\xfa\x7a\x9d\xe7\xff\x41\x0a\xff\x23\xb3\x56\xa2\xc2\xdf\x3f\x6b\x3b\x36\x78\x3b\x09\xf8\xd7\x2c\xf4\x43\x5a\x3d\xad\xcf\x8e\xf3\xc3\xaf\x00\x00\x00\xff\xff\x44\xd8\xa5\x3b\x51\x0c\x00\x00")

func assetsTemplatesTransportcnvTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransportcnvTmpl,
		"assets/templates/transportcnv.tmpl",
	)
}

func assetsTemplatesTransportcnvTmpl() (*asset, error) {
	bytes, err := assetsTemplatesTransportcnvTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transportcnv.tmpl", size: 3153, mode: os.FileMode(436), modTime: time.Unix(1572987633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/templates/migration.tmpl":    assetsTemplatesMigrationTmpl,
	"assets/templates/model.tmpl":        assetsTemplatesModelTmpl,
	"assets/templates/repo.tmpl":         assetsTemplatesRepoTmpl,
	"assets/templates/server.tmpl":       assetsTemplatesServerTmpl,
	"assets/templates/service.go":        assetsTemplatesServiceGo,
	"assets/templates/service.tmpl":      assetsTemplatesServiceTmpl,
	"assets/templates/transport.tmpl":    assetsTemplatesTransportTmpl,
	"assets/templates/transportcnv.tmpl": assetsTemplatesTransportcnvTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"migration.tmpl":    &bintree{assetsTemplatesMigrationTmpl, map[string]*bintree{}},
			"model.tmpl":        &bintree{assetsTemplatesModelTmpl, map[string]*bintree{}},
			"repo.tmpl":         &bintree{assetsTemplatesRepoTmpl, map[string]*bintree{}},
			"server.tmpl":       &bintree{assetsTemplatesServerTmpl, map[string]*bintree{}},
			"service.go":        &bintree{assetsTemplatesServiceGo, map[string]*bintree{}},
			"service.tmpl":      &bintree{assetsTemplatesServiceTmpl, map[string]*bintree{}},
			"transport.tmpl":    &bintree{assetsTemplatesTransportTmpl, map[string]*bintree{}},
			"transportcnv.tmpl": &bintree{assetsTemplatesTransportcnvTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
