// Code generated for package generator by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/templates/jsonrest.tmpl
// assets/templates/migration.tmpl
// assets/templates/model.tmpl
// assets/templates/repo.tmpl
// assets/templates/server.tmpl
// assets/templates/service.tmpl
// assets/templates/servicetest.tmpl
// assets/templates/transport.tmpl
// assets/templates/transportcnv.tmpl
package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsTemplatesJsonrestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x95\x4d\x6f\xe2\x3c\x10\xc7\xcf\xf1\xa7\x70\x73\xa8\x9c\x0a\x39\xf7\x4a\x5c\x1e\x5a\x3d\xaa\x76\xd5\x45\xad\x76\xf7\x6c\x25\x43\xea\x25\xd8\xce\x78\x02\x54\x28\xdf\x7d\xe5\x04\x0e\xb0\x94\x44\x2b\x90\xd8\xde\xc2\xd8\xf3\xf7\xbc\xfc\x66\x70\x2a\x9b\xab\x02\xf8\x2f\x6f\x0d\x82\x27\xc6\xf4\xc2\x59\x24\x2e\x58\x14\x83\xc9\x6c\xae\x4d\x91\x86\xd3\x38\x18\x10\x2d\xfa\xf0\x65\x80\xd2\x37\x22\x17\x33\x16\x91\xe3\xf1\x66\x23\xa7\xf3\x42\x3e\xab\x05\x34\x4d\xea\xe6\x45\xba\xb5\xbc\x02\x2e\x75\x06\x53\x45\x6f\x4d\x93\x12\x2a\xe3\x83\x7e\xcc\x12\xc6\x32\x6b\x7c\xfb\xd2\x66\x23\x9f\xcc\xac\x94\xaf\xda\x14\x75\xa9\x70\xaa\x7c\xa6\xca\x89\xf2\xd0\x34\x13\x5a\x7f\x81\x77\x9e\x59\x43\xb0\xa6\xf0\x39\x6e\x9f\xdb\x73\x98\xa8\x05\x6c\xef\xb7\xca\xb3\xda\x64\x5c\x80\xe3\x77\x8f\x26\x77\x56\x1b\x4a\xf8\x04\x41\x11\x9c\x7a\x4a\xac\x78\xc8\x49\xbe\x80\x77\xd6\x78\xf8\x89\x9a\x00\x47\x1c\xf9\xdd\xd6\x5e\xd5\xe0\x29\xe1\x1b\x16\x2d\x15\x72\x84\x8a\x93\x93\xfd\xc2\x2f\x50\xed\x3c\xfc\x50\x0f\xcf\x58\x94\xa6\xfc\x01\x32\x9b\x03\x8b\x00\x91\xdf\x8f\xdb\x3e\xc9\x67\x58\x75\x66\x14\x28\xff\xb3\xf9\x7b\x22\xbb\xdf\xe2\x16\xa1\x4a\x58\xa4\x67\x3c\xdc\xbf\x19\x73\xa3\xcb\x10\x6d\x04\x4e\x7e\xb5\x85\x48\xe4\x63\x68\xa1\x00\xc4\xa4\xb3\xae\x42\x8e\xbb\x84\xc5\x6a\x14\x42\x0c\x47\x08\x54\xa3\x61\x51\xd3\x85\xb1\x6d\x63\x17\xc7\x98\x83\x93\xbe\xb3\x0c\xc8\x45\x20\x54\x23\x7e\xdb\x09\x9f\x3f\xb4\x6f\x35\xb9\x9a\xd8\xc7\x1e\xcd\x71\x1e\xfe\x07\xda\x45\x3d\x2d\x6b\x54\xe5\x19\x50\x38\xa9\x79\x48\x41\xcf\x65\x7f\xa4\xf2\xf7\x7b\xa5\x3f\x9d\xc1\xd5\x57\xfd\x8c\x23\xd8\xa3\x7a\xa2\xf2\x1f\x0f\x5f\x46\xeb\x50\x6f\x94\x93\x6e\xf5\x88\x84\x45\xbe\xac\x8b\x11\xb7\xf3\x70\x90\xd1\x5a\xfe\x50\x65\x0d\xa2\x7f\x7d\x25\x52\x78\x42\x6d\x8a\xae\x17\x37\x76\xde\x35\xa1\x6d\x68\xbb\x54\xc3\x50\x8b\x58\x9b\xa5\x2a\x75\xce\xc3\x3b\x71\x72\xa4\x4d\x7f\x39\xb5\x08\x95\x7c\x2d\xeb\x82\x8f\x5b\xe9\x1e\x98\xfe\xa1\x21\xfe\xee\xf2\xcb\x2c\xf5\x7e\xe1\x43\xa8\x86\x78\x7c\x12\xae\xae\xed\x4f\x29\xe0\xfd\x94\x83\x21\x3d\xd3\x80\x7f\x92\xbe\x07\xfa\x00\x64\xae\x93\xf5\x07\x28\xe1\x22\xac\xf7\x0b\x1f\xb2\x3e\xc4\xe3\x93\xb0\x3e\x18\xb2\xfd\x75\x3a\xa0\x59\x3d\x94\x5d\x38\xaf\x01\x14\xfe\x0e\x00\x00\xff\xff\x83\xcf\xe0\x45\x1d\x0c\x00\x00")

func assetsTemplatesJsonrestTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesJsonrestTmpl,
		"assets/templates/jsonrest.tmpl",
	)
}

func assetsTemplatesJsonrestTmpl() (*asset, error) {
	bytes, err := assetsTemplatesJsonrestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/jsonrest.tmpl", size: 3101, mode: os.FileMode(436), modTime: time.Unix(1573068595, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesMigrationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x41\x6b\xf2\x40\x10\x86\xcf\x3b\xbf\x62\xbe\xe0\x21\xf9\xd0\x08\x3d\x0a\x1e\x8a\x2d\xa5\xd0\x83\x25\x1e\x0b\x75\x4d\xc7\xb0\x38\xd9\xd8\xc9\x08\x29\x61\xff\x7b\xd9\xd4\x83\x6d\x11\x14\x7a\xcc\x3b\x99\x67\x5f\xe6\xd9\xdb\x72\x67\x2b\xc2\xda\x55\x62\xd5\x35\x1e\xc0\xd5\xfb\x46\x14\x13\x6e\xaa\x04\x60\x3a\xc5\x85\x90\x55\xea\xfb\x09\xe6\x8f\x7e\xcb\xf9\x92\x0f\x62\x79\x69\xdb\xd2\xf2\xc2\xb6\x84\x93\x10\x56\x76\xc3\xa7\x94\xed\xc1\x97\x98\xd6\xf8\xbf\x76\x55\x76\x39\x21\xcd\x90\x44\x1a\xc1\x1e\x8c\x76\x38\x9b\x63\x9d\x3f\x90\xae\xba\x34\x03\x30\xad\xc6\x64\x3d\x70\x8a\xe7\xa7\xfc\x0b\x5b\x68\x5c\x5f\x03\x98\x38\x48\x5e\x7c\x12\xbf\x01\xcc\xeb\x38\xc2\x70\x8e\xda\xe5\xf7\x1d\x95\x69\xab\x19\x18\xb7\x1d\xd2\x7f\x73\xf4\x8e\xe3\x3b\x46\x48\x0f\xe2\x63\x0a\x26\xfc\xc6\xf4\x3d\x8a\xf5\x15\xe1\x68\x47\x1f\x37\x63\x1c\xb5\xef\x5c\xa8\x38\x5f\xc5\x36\x43\x91\x5b\x56\x92\x42\x31\x04\x40\x6c\x15\x8f\x25\x4f\xfe\xfc\xcb\x86\xb1\x11\xf9\x37\x1c\x10\xc7\x91\x77\x0c\x61\xb0\x75\x27\xcd\xfe\x12\x57\xd2\x30\x6f\x6c\xb9\xfb\xa1\xea\xc2\xf5\xeb\x44\x45\xe8\x19\x4d\x67\x4e\x32\xbb\xda\xda\xb7\x43\x7c\x06\x00\x00\xff\xff\xa2\x64\xfa\x07\xd7\x02\x00\x00")

func assetsTemplatesMigrationTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesMigrationTmpl,
		"assets/templates/migration.tmpl",
	)
}

func assetsTemplatesMigrationTmpl() (*asset, error) {
	bytes, err := assetsTemplatesMigrationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/migration.tmpl", size: 727, mode: os.FileMode(436), modTime: time.Unix(1572532722, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesModelTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xdb\x3c\x10\x3c\x8b\x4f\xb1\x10\x02\xc4\xfe\x90\x8f\xba\x07\xe8\x21\x70\x7b\xf0\x21\x45\x50\xb7\x3d\x67\x25\xae\xe4\xad\x29\xae\xc2\x1f\x24\xae\xe1\x77\x2f\xf4\x93\xc4\xb1\x0b\x37\x87\xf6\x66\x2f\x67\x67\x86\xc3\xb1\x3b\xac\x36\xd8\x10\xb4\x62\xc8\x2a\xc5\x6d\x27\x3e\xc2\x4c\x65\xb9\xc1\x88\x25\x06\x2a\xc2\x83\xcd\x15\x40\xde\x70\x5c\xa7\x52\x57\xd2\x16\x01\xa3\x78\x2e\x1a\xd1\x29\xb1\xc9\x95\xca\x8a\xe2\xf0\xdc\x72\x59\x74\x0f\xb9\xca\xda\x61\xcd\xe2\x38\x6e\x79\xe3\xe5\x91\x7e\x92\x2d\x4a\xac\x36\xe4\x4c\x31\xe8\xe6\x6a\xae\x54\xdc\x76\xd4\x0b\x17\x05\xec\x76\x7a\xe9\x6a\xab\x57\xec\x9a\x64\xd1\xdf\x61\xa8\xd0\x2e\x30\xd0\x7e\x3f\x39\xcd\xce\x62\x42\xf4\xa9\x8a\xb0\x53\x59\xd6\xea\xa5\x21\x17\xb9\xe6\x0a\x23\x8b\x53\x59\xb6\xdb\xfd\x0f\x1e\x5d\x43\x70\xb1\xa1\xed\x15\x5c\x74\x5e\x3a\xb8\xfe\x00\xfa\xce\x4b\xf7\x91\xea\xb0\xdf\x4f\x30\xae\xc1\x49\x1c\x11\x7a\x19\x3e\xb5\x25\x19\x43\x66\x3a\x1f\xc7\x9f\xb1\xed\x35\x5f\xbe\x26\x6b\xbf\x6e\xbb\x7e\x74\x6f\xca\xeb\xfc\x79\xbe\x10\x3b\x41\x73\xf8\x11\xc4\xbd\x9e\xbc\xb9\xc7\x02\x5b\x9a\xae\x71\x25\x2d\x47\x6a\xbb\xb8\xcd\xef\x27\x3f\xe4\xcc\x8b\xb7\xf1\x33\x00\x40\xab\x6f\x92\xe1\xa8\xb2\x7d\x1f\x64\x51\xc0\x8a\xe2\xc2\x13\x46\xfa\x8e\x36\x51\x80\x5a\xfc\x98\x9b\x56\x75\x72\x15\xcc\x8e\xd3\x3b\x50\x85\xff\xce\x45\x3b\x3f\xe6\x9e\xcd\x81\xbc\x17\x0f\x3b\x05\x50\x14\xf0\x85\x3a\x8b\x15\xc1\xe5\x19\x89\x21\x07\xbd\x8a\x9e\x5d\x73\x39\x98\x43\x27\x71\x4d\x1e\x92\xe3\x87\x44\xc0\xd3\x93\x91\x1f\x49\x97\x35\xf4\x2b\x60\x84\xc2\xf0\x20\xf4\xc4\x21\x82\x78\xd8\x4a\x82\xce\x53\x4d\xaf\x1c\xe2\x48\x4f\x6b\x11\x1e\xd9\x5a\x28\x09\x52\x20\x33\x28\xad\x6c\x6a\xa0\x21\x47\x7e\xa8\xc3\x84\xbc\x81\xce\x22\xbb\xbe\x38\xec\x9a\x71\x0b\x6d\x10\x78\x14\xbf\x81\x32\x45\xe0\x89\xab\xc5\x0d\x81\x15\xd9\x40\xe0\x96\x2d\x7a\x40\x6b\x21\xd8\xd4\x8c\x31\x13\x56\x6b\x60\x17\x22\xba\x8a\x46\x72\xa9\x21\xae\x39\x80\xa7\x20\xc9\x57\xa4\x87\x92\xb3\x26\x7d\x7d\x52\xf5\x83\x94\xee\xea\xa7\xbe\x94\x79\xcf\xdd\xd5\x4f\xf9\x69\xe7\x4f\xc1\xef\x0c\xfd\x2c\xd5\xd1\x0f\x46\x1f\x3f\xf8\x79\x17\xf3\xf3\xdc\x43\x51\x4f\x28\xe7\x2a\xf3\x14\x93\x77\xe0\xd8\xaa\xfd\x73\x87\xbf\x75\xe6\x9f\x75\xf8\x90\xfb\xa0\xc3\xef\x33\xff\x76\xf9\x37\xe6\x6f\x31\x56\x6b\xa8\xc4\x19\xee\x33\xfc\xab\xe6\x07\xee\x59\xac\xfe\x84\x2b\x45\x6c\x7f\x23\x3f\x15\xe3\x76\xd0\x1f\xb6\x17\x32\xfe\x8f\x4c\xbe\xbd\xda\xab\x5f\x01\x00\x00\xff\xff\xb9\x7c\xe9\xb1\x09\x06\x00\x00")

func assetsTemplatesModelTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesModelTmpl,
		"assets/templates/model.tmpl",
	)
}

func assetsTemplatesModelTmpl() (*asset, error) {
	bytes, err := assetsTemplatesModelTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/model.tmpl", size: 1545, mode: os.FileMode(436), modTime: time.Unix(1572984096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesRepoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5f\x73\xd3\x48\x12\x7f\x96\x3e\x45\xa3\x22\x41\xca\x09\x19\xee\xd1\x77\xbe\x2a\x12\xa7\x6e\xb3\x45\xb1\x59\x1c\xe0\x81\xa5\x60\x22\xb7\xc4\xe0\x91\x46\x99\x19\x65\x6d\x5c\xfa\xee\x5b\x3d\x23\x3b\xfe\x17\xdb\xd9\x98\x5a\x5e\xa2\x58\xd3\xea\x3f\xbf\x5f\x77\xab\x5b\x15\x4b\x47\x2c\x47\x50\x58\x49\xdf\xe7\x45\x25\x95\x81\xd0\xf7\x82\xeb\x89\x41\x1d\xf8\x5e\x90\xca\xd2\xe0\xd8\xd0\xbf\x59\x61\x02\xdf\xf7\x82\x9c\x9b\xaf\xf5\x75\x92\xca\xa2\xf3\xad\x90\x5c\xc9\xb2\xa3\x6f\xc4\x38\x70\x47\x82\xb9\xa3\x82\x8f\x94\xfc\x13\xbf\xa3\xe8\x5c\xb3\x74\x84\xe5\xb0\x93\xca\x32\xe3\x39\xc9\x4d\xa7\xc9\xe5\x28\x4f\xde\xb0\x02\x9b\xa6\xc3\x4b\x83\xaa\x64\xa2\x53\xc8\x21\x8a\xc0\xf7\x84\xcc\x73\x54\xb0\x43\x9d\x90\x79\xe0\x47\xbe\x6f\x26\x15\x92\xd3\xd3\x69\x72\x51\x66\x22\x19\xf0\x32\xaf\x05\x53\x97\x4c\xa7\x4c\x9c\x31\x8d\x4d\xf3\x16\x2b\x09\xda\xa8\x3a\x35\x30\xf5\x3d\x2f\x35\x63\x68\x43\x4b\xce\xdc\x95\xee\x66\x39\x9c\x38\x2f\xe9\x6e\xc6\x73\xdf\x23\x67\xe0\xc4\x79\x94\xbc\xb6\x17\xdf\xf3\xae\xc6\x00\x27\x14\x75\x72\x35\xf6\xbd\x86\xdc\xc8\xea\x32\x85\x82\x8d\x70\x97\x1f\xe1\x06\xe3\x31\xac\xdb\x8e\x61\xdd\x74\x0c\x66\x3c\x37\x1c\xc1\xc9\xce\x98\xa7\xbe\xa7\xd0\xd4\xaa\x84\xe3\x5d\xb2\x2d\x2e\x5d\x48\xcd\x38\x76\x68\x74\xc9\xad\xd8\x81\xd0\x25\x77\x62\x1b\x7b\x17\xc0\x8a\x34\x7e\xe3\xfb\x9d\x0e\x9c\x29\x64\x06\x81\xc1\x74\x9a\xbc\x45\xed\x68\x85\xc4\x41\x12\xae\xda\x3d\x63\x05\x2e\xba\xb8\x33\x88\xa8\x35\xb0\x4d\x13\x9c\xd8\xe4\x49\xb6\xe9\x8a\x00\x95\x92\x8a\x30\xd9\xa2\x29\x19\xa0\x71\xf6\xde\x33\x51\xa3\x0e\x23\xdf\xf7\xb4\x81\x6e\x0f\xbe\x4c\xa7\xc9\xe0\xf7\xd7\xc9\x45\xa9\x51\x99\x81\x69\x9a\x2f\xbe\xef\x7d\x8e\x49\x2f\x9d\xef\x88\x34\xb9\x1a\xdb\x94\x1f\x9e\x8f\x31\x0d\xb5\x89\xb7\x3d\x40\x56\x5b\xe6\x50\xa9\x16\xe8\xff\xa3\x79\x25\xc4\xfc\xb1\x4b\x51\x2b\x26\x16\x43\x84\x4c\xc9\xc2\x96\xf3\x01\xd1\x77\x56\xc3\xe8\x4e\x99\x33\xbc\x08\xff\xc7\x4f\xbb\xf1\x77\x38\x59\x0e\x22\x22\x61\x19\xd4\x01\x0a\x4c\xc9\xd0\x0c\x57\x12\xde\x0b\x53\xf7\x64\x78\x7c\xaf\x77\x31\x68\xb3\x80\xe7\x16\xb9\x25\xa8\x97\xd3\xf9\x7a\x02\x17\xfd\xc3\xa2\x1a\xf2\x21\xd8\xe6\x97\xb1\x14\xa7\x4d\x04\xe1\x9e\x20\xb6\x00\xde\x32\xb5\x0d\x1f\xd8\xad\x6d\x2d\xb5\x1d\x96\xa7\x93\x8b\xbe\xa3\x81\x8e\x7b\x90\x15\x26\x19\x54\x8a\x97\x26\xb3\x79\xcb\x87\x49\xa8\x8d\xe2\x65\x1e\x45\x2d\x53\xfb\xa5\x3f\x05\xbd\xd6\x88\x76\x33\xb5\x51\x72\x89\xab\xd3\xc9\x40\xd4\x39\x68\xeb\xbe\x5e\x63\x4e\x8b\x3a\x3f\x2c\x77\xce\x60\xa8\xad\x55\x07\xc5\x4f\x44\x1f\xf9\xb6\x8d\x40\x72\xfb\x67\x60\xee\x5d\x35\x64\x06\x97\xf9\x3a\x20\x4f\x4e\xfd\x01\xdf\x1b\x0a\xb3\xbd\xbb\x3d\x21\xb6\xed\x3d\x73\xd1\x4f\x06\x36\x71\xc2\x28\xf2\x3d\x9e\x59\xbd\x4f\x7a\x50\x72\x61\x67\x94\x16\x49\xa2\xee\x9c\xec\x67\x61\x90\xb2\xb2\x94\x06\x14\x1a\xc5\xf1\x96\xe6\xb6\x0c\x15\x96\x29\x6e\x73\xa6\x0b\x47\x3a\xb0\x5e\x3b\x3d\xd6\x1c\xa5\xce\x8e\x97\xa0\x03\x6f\xe1\x25\xd8\xe9\xc0\x69\xcd\xc5\x10\x6a\x7b\x02\xda\x30\x83\x05\x96\xc6\xf7\xd2\xaf\xac\xcc\x51\xc7\x70\x63\x26\x3b\xb0\x39\x73\xa2\xdb\xa0\x89\xe1\x58\x61\x16\xf9\x5e\x25\x35\x69\x7b\xe1\x7b\x82\xb9\x44\x27\xfd\xff\x85\x7f\xfb\xae\x7a\xb4\x01\x3b\xa9\x26\xa7\x75\x96\xd1\x60\xa6\x4d\xf2\x41\x71\x83\x2d\xb0\xc1\xbb\xcb\xfe\xab\xab\xf3\x95\x8e\x3f\x28\xd9\x08\x5b\xfa\x07\xe7\x57\x10\x50\x70\x99\x54\x50\xc5\xa0\x2b\xb2\xa2\xc8\x45\x68\x83\xb2\x64\x90\xb5\x8a\x29\xc3\x99\x68\xcb\xdd\xf7\x88\x33\xeb\x17\x09\x78\xb3\xd3\xe5\x62\x0b\x8e\x6e\xa1\x07\x47\xb7\x10\xc4\x4e\x3d\xd9\xf2\x1a\x40\xa1\x71\x9f\xe7\xe2\x85\x07\x3d\xcb\xda\x6a\x8c\xed\xf3\x56\x2f\xe1\xd5\x03\xfa\xfb\x2f\x78\x49\x63\x1b\xb3\xd5\x6f\x6f\x5b\xec\x9e\xbf\x74\xd4\xaf\xe8\x58\xb2\xfc\xe1\x97\xf3\xb7\xe7\xc0\x87\xd0\x83\x67\x47\xfa\xd9\x7f\x82\xad\x73\xca\x5d\x1a\x53\x5a\x3d\x70\x02\x9a\x17\x40\xbc\x3e\x9e\xae\xcc\x42\x3f\x4a\x33\x65\xb5\x90\x79\xd2\xc7\xeb\x3a\xcf\xc2\x60\x5b\x23\x58\x4b\xfc\xee\x1f\xa5\xad\xad\x9b\x1a\xd5\x64\xa1\x9a\x57\x47\x37\xdb\xd0\x1e\x53\x13\x40\x45\xa1\x30\xdb\xaf\x5d\x85\x05\xab\x3e\xba\x2c\xfd\xe4\x2e\x31\xcd\x19\xf6\xa5\x33\x4b\xea\x6e\xcf\x2e\x2b\xeb\xa2\x0e\xec\xe7\x6d\x0d\x3c\x1d\xe1\x24\x86\xa7\x95\x92\xb6\x30\x92\x4b\x25\xab\x3e\x66\x1a\x9a\xc6\x89\xf1\x0c\xc2\x12\x9d\x44\x72\x45\xab\x58\x50\x29\x5e\x30\x35\xf9\x3c\xc2\x49\x10\x2d\x0a\x4a\x05\x21\xde\x2c\xc9\xd6\x35\x1f\x06\xd1\xda\x6d\xe7\xca\x86\x03\xbb\x8c\xae\xdf\xbe\x96\x52\x20\x2b\x37\x9c\xd0\x7c\x95\xa3\xda\x70\x92\x09\xc9\x36\xe9\x1a\x62\xca\x0b\x26\x82\x88\x3c\xe7\x19\xc1\x9e\x4c\xa7\xad\xc8\x3d\xa8\x43\xd3\xdc\xc9\xbc\x67\xe2\x55\x9a\xa2\xd6\x52\x41\xd3\x50\x4b\xa7\xa3\xfb\x99\x7d\x94\x76\xbb\xb5\x39\x4e\x3f\x06\x73\xa1\x33\x29\x6c\x39\x40\xd3\x04\x9f\xa0\x07\x41\x77\xe3\x11\x35\x03\x4b\x0e\x96\xc3\x45\xa2\x56\x10\xf9\xa6\x65\x19\x40\x0b\xc7\x13\x85\x19\x0d\x19\x49\x1f\xb1\x3a\xbf\xa9\x99\x08\xd7\x11\x9a\xf9\xbe\x98\xbe\x16\x84\xbf\x1b\xbf\xcd\x5d\x32\xcf\xf5\xaf\x83\xdf\xde\x84\x8f\x52\x76\x57\xa9\xae\x05\x3f\x02\x3f\x02\x70\x2f\x0c\xaf\x79\xc9\xd4\x64\x8e\xa2\xc0\xf2\x91\x31\xdc\x93\x10\x11\xfc\x0f\x5e\xc0\xf1\xf1\x7e\x3c\x3d\x48\xf5\x5e\x14\xb6\xd0\xdc\xef\xde\x0f\x49\xd8\x0d\x9d\x85\x3a\xf5\xa6\xea\x66\x06\x0d\x2f\x36\x1d\x6d\xb9\xad\x0d\x2b\xaa\x6d\x67\xe6\x7b\xdb\xea\xda\x0a\xd9\x1b\x90\xc4\x51\xb3\x6f\x87\xf8\x67\xe0\x5d\x89\x3a\x47\x29\x64\xca\x0c\x5f\x68\x0b\x0f\x8a\x79\x56\x7f\xf3\xde\xf8\xa8\xa0\xef\xd4\x1d\x3e\xf8\x4d\xff\xb7\xef\xf6\xf9\xcc\x4b\xb5\xdc\xfe\x88\xe8\x6d\x4f\x8b\x4d\x1f\x05\xae\x2e\x36\x77\x1f\x67\x0e\xfe\x31\xc1\x99\x0b\xf9\x70\xbe\x8b\xce\x57\x96\xe5\x05\xd1\x09\xee\xde\xef\xa3\x87\x7e\xd8\x6a\xe7\xae\x8d\x9f\xad\x66\x46\xed\x8a\x3e\xb4\x3f\x56\x3f\x16\x2e\x41\x73\xe0\x6d\x7d\xd1\xfc\xf2\xc2\xbe\x03\xa4\x7d\xb7\xe8\x83\x01\x75\x26\x8b\x82\x1b\x30\x8a\x95\x9a\xa5\x54\x5f\x07\xfc\x86\x6a\x75\x87\x4b\xcb\xec\xae\x55\x7d\xe6\xf3\xec\x59\xbf\xf1\xff\x0a\x00\x00\xff\xff\x8d\x7f\x88\x19\x33\x18\x00\x00")

func assetsTemplatesRepoTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesRepoTmpl,
		"assets/templates/repo.tmpl",
	)
}

func assetsTemplatesRepoTmpl() (*asset, error) {
	bytes, err := assetsTemplatesRepoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/repo.tmpl", size: 6195, mode: os.FileMode(436), modTime: time.Unix(1573045882, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4d\x4f\xe3\x3e\x10\xc6\xcf\xf1\xa7\x18\xf9\xf2\x4f\x50\x48\xee\x7f\x89\x03\xea\x6a\x81\x05\xed\x46\x05\x96\xb3\x99\x4e\x6b\x8b\xc4\xce\xda\x63\x68\x15\xe5\xbb\xaf\x9c\xf0\xd2\x7d\x11\x45\x7b\xa8\x64\x4f\xfd\x7b\xec\xe7\xf1\x38\xbd\xc2\x07\xb5\x21\x18\x06\xa8\x9a\x87\x4d\x75\x4d\xfe\xd1\x20\x35\x8a\x35\x8c\xa3\x10\xa6\xeb\x9d\x67\xc8\x45\x26\xd1\x59\xa6\x2d\x4b\x91\x49\x4b\x5c\x6b\xe6\x5e\x0a\x91\xc9\x8d\x61\x1d\xef\x2b\x74\x5d\xbd\x71\xc7\xa8\x4d\x8d\xda\x48\x51\x08\x81\xce\x86\x89\x4d\xea\x17\x76\xdd\x56\xd7\xc6\x6e\x62\xab\xfc\x95\x7b\x22\x8f\x2a\x10\x8c\xe3\x82\xb7\x97\xb4\x83\x67\xf9\x34\x3c\x01\xf9\x2e\x31\x89\xd7\x35\x2c\xa9\x6f\x15\x12\xe4\x08\x47\x0b\x67\x59\x19\x4b\xbe\x80\xfb\x1d\xec\x5c\xf4\x80\x31\xb0\xeb\x20\xb0\x8f\xc8\x69\xbd\xf3\x69\x97\x47\xf2\x0c\xac\x09\x3a\x62\xed\x56\x60\x2c\x3b\x50\xb0\x8e\xc8\xc6\x59\x30\xeb\x44\xc3\xca\xd9\xff\x18\x2c\xd1\x0a\xd2\xdf\xcc\x0a\x35\x18\xae\xc4\x3a\x5a\xfc\x7d\xc7\x4e\x3d\xd0\x29\xa2\x8b\x96\x4f\x9b\x8b\xa5\x8b\x4c\x3e\xef\x95\x27\xcb\x80\xda\x54\x73\xa5\xd8\x1b\xc3\x20\x32\x4f\x1c\xbd\x85\x79\xdd\x5c\xcf\x65\x3d\x0c\xb3\xf1\xa6\x8d\x5e\xb5\xaf\xb6\xc7\x51\x96\x90\xf6\xce\x51\xff\xa2\x39\x88\x2c\x43\x5d\x35\x2e\x70\x2e\x6b\x59\x02\x56\x0b\x4f\x8a\xe9\x8f\x08\x1b\x15\x50\xb5\x8b\x39\xc3\x2f\xd7\xdf\xbe\x16\x33\x7a\x46\xaf\xe4\x19\xf1\x87\xb1\xb7\x03\xcb\x41\x8e\xe3\xbb\x37\x36\x0c\x72\x94\x6f\x16\xc2\x5f\x3c\x64\x01\x75\x75\x1b\x28\x3f\xd4\x2c\xc5\xcb\xe2\x7f\x39\xf7\x04\x36\xf1\x15\xbc\xed\x57\x1f\x8e\x6a\x62\x3f\x51\x4b\x93\xed\x09\x9f\x67\x1f\xc3\xc7\x42\xa4\xdf\x28\xe6\x16\x3a\x64\x33\xb7\xb4\x65\x48\xaf\xac\x3a\x57\x76\xd5\xa6\x9c\xf6\x67\x7b\x1d\xb4\x5f\xfe\x9c\xf2\x9d\x42\x7e\x9a\xeb\x4b\x0a\xbd\xb3\x81\xee\xbc\x61\xf2\x25\x78\x38\x7a\xae\xff\x88\x14\x78\x0e\x3f\xb4\x71\x03\xff\x9f\x4c\x97\x72\xbb\xbc\x6a\x94\x57\x5d\xee\xcb\x03\xef\xf0\x38\x61\x72\x6a\x07\xde\x4e\xf8\xfc\x86\xab\x3b\xc3\xfa\xbb\x6a\x23\xe5\xbe\x5a\xcc\xb5\xbc\x28\x0f\x5a\xbe\xa4\x5d\x09\x49\x33\x49\x26\xfb\xd3\xe7\x88\xce\x6f\x6e\x9a\xfc\xa9\x04\x3f\xe9\xbe\xe8\x21\x6f\x8b\x97\x44\x7f\x06\x00\x00\xff\xff\xd9\x80\x76\x57\xc6\x04\x00\x00")

func assetsTemplatesServerTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServerTmpl,
		"assets/templates/server.tmpl",
	)
}

func assetsTemplatesServerTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/server.tmpl", size: 1222, mode: os.FileMode(436), modTime: time.Unix(1572867572, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServiceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\xdd\x8e\xda\x3c\x10\x86\x8f\xe3\xab\x98\x2f\x07\xab\x64\x85\x9c\xf3\x4f\xe2\xa0\xdd\x6d\x57\x48\xfd\x41\x4b\x7b\x01\x56\x18\x52\x0b\xc7\x0e\xfe\x69\x55\xa1\xdc\x7b\x15\x1b\xd8\x85\x12\x12\xa0\xcd\x6e\x8f\x56\x6b\x5e\xbf\x33\xf6\x3c\x33\x71\xc5\xf2\x25\x2b\x10\x0c\xea\xef\x3c\x47\x42\x78\x59\x29\x6d\x21\x21\x91\xad\x20\x5e\xaf\xe9\x74\x59\xd0\x4f\xac\xc4\xba\xce\xaa\x65\x91\x6d\x56\x66\x41\x3f\x65\xf6\x5b\x5d\x67\x56\x33\x69\x9a\x7d\x31\x49\x09\xc9\x95\x34\xde\x21\xd7\xc8\x2c\xae\xd7\x74\x22\x17\x82\xce\xb8\x2c\x9c\x60\x7a\xca\x4c\xce\xc4\x1d\x33\x58\xd7\xef\xb4\x86\x31\xc4\x39\x93\x52\x59\x08\x7a\x38\xdc\xf0\x41\xfd\x40\x9d\x7b\x7d\x4c\xa2\x02\xed\x1b\x21\xfa\x9b\x16\x68\x77\x8e\x53\xe1\x34\x13\xcf\xfc\x40\x70\x63\x83\x69\x97\x23\x40\x8b\xe9\xf1\x34\x5d\x35\x3f\xeb\xec\x41\xdf\x61\x3a\x47\x81\xe7\x98\x06\xfd\x69\xd3\x94\x90\x85\x93\x39\x24\x06\x6e\x37\x55\x4d\xe1\xae\xb3\x72\x89\xc6\x15\xd8\x8a\x76\x2b\x1f\x71\x35\x02\x8d\x06\x6e\x7b\xca\x4d\x0a\xa8\xb5\xd2\xb0\x26\x51\x96\xc1\x47\x35\x47\x41\x22\x07\xff\x8f\x41\xe3\x8a\x7e\x51\x7e\x25\x49\x89\xff\xf9\x11\x2b\x45\x22\x8d\x95\x1a\x35\xdb\x1a\x95\xa1\x87\x01\xee\x58\x89\x3b\xff\x4a\x25\x29\x89\xf8\xc2\xcb\xff\x1b\x83\xe4\xa2\x09\x15\x69\x34\xf4\xbd\x56\x65\xb0\x97\x5c\x8c\xa0\x17\xc1\x3e\x6e\xea\x0d\xac\xd3\xb2\xf9\x8f\x44\x35\x21\x11\xfa\x62\x34\xa9\x6d\xce\x9d\xdc\xb8\xe1\x23\xab\xb2\xe4\x76\xa0\x13\x67\x19\x7c\x76\xb6\x72\x96\x1c\x78\xdf\xb8\x11\xc4\xf1\xa8\x89\x9c\x92\xed\x36\xc9\x05\xa9\x8f\xe1\xf7\xf0\xd4\x8e\xa1\x65\x8f\x91\x77\x52\xb4\x07\x5d\x87\xf2\x80\xb7\xbf\x0a\x54\xaf\xe9\xd5\x7a\xbd\xce\xec\x52\xf2\xb5\x7d\xf0\x6e\x03\x05\xbf\x9c\xa9\xeb\xe2\xb6\x32\xd5\xdc\xc6\x45\x4c\x9d\x9a\x67\x1d\xb2\x36\xae\x5e\xfd\x24\xeb\xfe\xc2\xb5\x53\x17\xd2\x79\x62\xee\xed\xcf\x99\x70\x45\xe2\x68\xf3\x87\xce\xac\xe6\xb2\x18\x20\x8f\xab\x00\x7c\xe1\x89\xf6\xb5\xf3\x39\xb0\x05\xb0\x5b\xb9\xc7\x60\x1f\xf9\x90\x03\xae\xd7\xbb\xe7\xd4\x6d\x3f\xa0\x05\x96\xe7\xca\x49\x4b\xa2\xdc\x69\x8d\xd2\xfe\x36\xf5\x36\x04\x36\x4d\x34\x99\xa3\xb4\x7c\xc1\x51\x7b\x1c\x07\xcb\x33\x7c\xd1\x81\x41\xd9\xda\xd5\x91\xa3\x93\x7b\x18\xc3\xe6\x14\x74\x72\x1f\xb6\x86\x9a\xed\x01\x1d\x96\xce\x78\x1f\x5c\x97\xff\xe5\xad\x74\xf5\xbd\xfd\x89\x6e\xba\xef\x7c\x07\x6f\xbb\xa9\x5b\xb9\xd7\x4d\x7d\xe4\xff\x4e\x37\x3d\xab\x72\x38\xd8\x4b\xb7\xcd\xab\xc3\xce\x7b\xb7\x70\xf7\x2b\x00\x00\xff\xff\x25\x28\x8d\x59\x1b\x0f\x00\x00")

func assetsTemplatesServiceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServiceTmpl,
		"assets/templates/service.tmpl",
	)
}

func assetsTemplatesServiceTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServiceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/service.tmpl", size: 3867, mode: os.FileMode(436), modTime: time.Unix(1573044794, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServicetestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdf\x73\xdb\x36\xf2\x7f\x26\xff\x0a\x94\x33\x49\x29\x7f\x59\xaa\x4e\xbf\xf7\xe2\x1b\x3d\xb4\x8e\xef\xda\x99\xc4\xf6\x48\x6e\xfa\x90\xcb\xb4\x10\xb9\xa4\x78\x26\x01\x1a\x00\x25\xa7\xae\xfe\xf7\x9b\x05\x28\x8a\x94\x68\x90\xad\xdd\x4e\xaf\x97\x3e\xd4\x12\xb8\xd8\x5d\xec\x2e\x3e\xfb\x43\x4c\x49\xa3\x5b\x9a\x02\x91\x20\xd6\x59\x04\xae\x9b\x15\x25\x17\x8a\xf8\xae\xe3\x45\x9c\x29\xb8\x57\x9e\xeb\x78\x20\x04\x17\x12\x3f\x25\x85\x5e\xe0\xfa\x8b\x02\xa9\x32\x96\x7a\xae\xeb\x78\x69\xa6\x56\xd5\x32\x8c\x78\x31\x8d\xe9\x1a\xa2\x74\x35\x4d\xf9\x17\xb2\x84\xcd\x14\xff\xe7\x75\x49\xfe\x5d\xf0\x4c\x70\x36\x95\x77\xf9\x7d\xfd\x28\xa7\xe6\x51\x91\xdd\x0a\xbe\x81\x9f\x21\x9f\x2e\x69\x74\x0b\x2c\x9e\x46\x9c\x25\x59\x3a\x4c\x17\x2f\x91\xe6\xe1\x21\xbc\xbe\x4d\xc3\x4b\x5a\xc0\x76\x3b\xcd\x98\x02\xc1\x68\x3e\x2d\xb2\x54\x50\x95\x71\x66\xa3\xe1\x31\xe4\x96\xe7\x02\x4a\x7e\xfc\xb8\xbc\x4d\xa7\xf5\xca\xc2\xd8\xf1\x9a\xaa\xd5\x76\x3b\xac\x70\xce\xf1\x54\x45\x96\x92\x01\xc2\xb6\xf2\x05\x8f\x07\xc9\xeb\x73\xc8\x75\x34\x44\x5a\x7b\xde\x73\x27\xae\xbb\xa6\x82\xf8\x2e\x21\xd3\x29\x39\x17\x40\x15\xb8\x0f\x0f\xbb\x23\xdd\x80\x54\xa1\x59\x7d\x4b\xcb\xed\xd6\x35\x74\xdf\x97\x31\xd2\x11\x52\xe9\x0f\x0f\x0f\xe1\x77\x2c\xc9\xc3\x45\xc6\xd2\x2a\xa7\xe2\x9a\xca\x88\xe6\xe7\x54\xc2\x76\xfb\x8e\xe6\x59\x4c\x66\xa4\xa0\xe5\x7b\xa9\x44\xc6\xd2\x0f\xda\xb0\x09\x8d\xe0\x61\xfb\xe0\x12\x72\x20\xcd\xf0\x36\xd2\x08\xd9\x49\x5c\xd0\xa2\xcc\x81\x9c\xba\x84\x48\xfd\xd1\x26\xf3\x74\x40\x5e\xc6\x62\xb8\x27\x1d\xa9\x86\xff\x5b\x5a\x92\x2f\xfb\xe4\xbe\x1a\x25\x77\xcc\x59\xad\xb2\x4f\x6b\xd9\x13\xd7\x4d\x2a\x16\x11\x7c\xfc\x96\x66\xcc\x2f\xc8\x49\x7d\xed\xc2\xb7\x13\xf2\xe0\x3a\x45\x2a\xc8\xd9\x8c\x48\x50\x55\xe9\x4f\x5c\x27\xe2\x31\xe0\x42\x11\xce\x2b\x86\x0b\x0a\xa8\x88\xf9\x86\xf9\x45\x2a\x26\xae\xc3\x65\x78\x71\x9f\x29\x1f\xe9\x26\xee\xd6\x75\xa7\x53\xcd\xdd\xf8\xd6\x76\x28\x82\x82\x25\x39\x24\x79\xc3\x37\x20\x22\x43\x11\x21\x93\x8c\xb3\x70\xaf\xf5\x30\x5f\x5f\xed\xcf\x74\xa3\xcf\x84\xe6\xc6\xf3\xf4\xc7\xdf\x42\x89\x2a\x52\x18\x82\x0e\x46\xac\x00\x49\x86\x85\xcc\x41\xba\xae\x13\xa9\x7b\xb4\x4d\x0d\x6d\xe1\x37\x34\xba\x4d\x05\xaf\x58\xac\x2d\x97\xa4\xf8\x10\x55\x39\xd7\x88\x83\x8b\x39\x6f\x16\xdf\xf0\x34\x05\xe1\x4f\x5c\xad\xe0\x1c\x4a\xee\x3a\x95\x04\x81\x9f\x02\x02\x42\xec\x08\x71\xc1\x8f\xd4\x7d\x40\xa2\x24\x0d\x48\xce\xd3\x80\x78\x88\x1d\x5f\xac\x28\x8b\x73\x10\xde\xc4\x75\xb2\x44\x6f\xf9\x6c\x46\x58\x96\xe3\xa1\x1d\x15\x5e\x20\xce\xfa\x20\x44\xfd\x69\x32\x71\x9d\xad\x96\xf6\x75\xa5\x56\xae\x43\x77\x12\xf0\xeb\x91\x04\x5a\xa9\x55\x23\x21\x20\x3b\xd5\x6a\x7d\xd1\x80\xae\x83\x22\x67\x84\x86\x23\xbc\x22\xe0\x2e\x20\x2f\x05\x48\x9b\xb2\x89\xef\x69\x9f\x83\x35\x2c\x74\xfe\x38\x23\x2f\xa4\xa7\xed\xd4\x39\x9d\x56\xee\x1d\x88\x2c\xf9\xe8\x3a\x36\x26\x67\x33\x74\x75\x68\xd3\xd9\xca\xc0\xc8\x68\x1c\x95\x82\xb2\xb1\xfa\xe6\xe3\x22\xaf\x52\xdf\xc2\x2f\x44\x02\xed\x80\x21\x03\x51\xc6\xb8\x42\x81\x56\x23\x25\x82\x17\x24\xa6\x8a\x2e\xa9\x84\x47\x8d\x95\x25\x36\x26\xe6\x8c\x64\xf6\x5c\x6a\x78\x7b\xa9\x9f\x65\x72\x41\x0b\x7b\xc8\x58\xf8\x06\xe4\x64\x50\xef\x49\xad\xf1\x1b\x9e\x26\xbe\xf7\xe2\xff\xd6\xff\x62\x5e\x40\xb0\x7c\x08\x17\x71\x55\x94\x36\xfe\x68\x9f\xdf\xb8\xb5\x16\x8e\xf7\xa4\xb9\x83\x9e\x15\x08\xd1\x3c\x84\xb2\x98\x64\x4a\x92\x35\x6e\xcf\x22\x8d\x7b\x24\xe6\x20\x09\x9a\xb9\xa0\x2a\x5a\x85\xc6\x7e\x7b\x90\xfd\xe7\x3e\xe8\xae\xf3\x4a\xd0\xbc\x07\x5f\xd1\x41\x34\xcf\x49\x97\xb0\x1d\x78\x7b\x70\xb5\xf2\xeb\xc5\xd5\x6b\x01\x02\xee\xaa\x4c\x66\x0a\xa4\xeb\xfc\xd8\xdc\x07\x73\x8d\x17\x9d\xd4\xd6\xc3\x73\x20\xd6\xf5\x4d\xaf\xd3\x00\x4b\xeb\x4c\xf9\xf8\x51\x6c\x98\x60\x32\x80\x23\xe0\x0e\xd5\xb3\x9e\x74\x0e\x77\x0f\xed\x74\x30\x40\xfc\x29\x13\xb4\x32\x81\x3d\x84\xc6\x26\x81\x36\xaa\x1c\x79\x79\x3c\xfe\xaf\x2d\xb7\xe3\x00\xff\x8f\x29\xb4\x86\x36\x0e\xc7\xb0\xe8\x7b\x8c\x23\xd7\x92\xb3\x0e\xd8\xa1\x20\x4d\x80\xa7\xf5\xbc\x83\xc3\xce\xeb\x0d\x9d\x73\x35\x5b\x6a\x2e\x77\xea\x23\xaa\x9c\x03\xf3\x2d\x3a\x19\xb3\x22\xed\x67\x33\xf2\xea\xf0\x32\xdd\x97\x10\xe9\x7b\xa4\x36\xdc\x62\xde\x94\x2b\xf2\x22\xf6\x02\xe4\xb3\x3f\x83\x45\xea\xfb\x2f\x3f\xe8\xec\x85\x42\x2d\xc0\x68\xc0\xe0\xf4\xbd\x27\xf3\x2a\xf5\x3e\x90\x5f\x7e\xb1\x32\x3d\xfd\x15\x4c\x5f\x35\x4c\x3b\xde\xe0\x4b\x45\x33\x06\x31\x59\xd3\xbc\x02\x49\x62\xbe\x07\x53\x62\xcc\x01\x31\xe1\x0c\xa4\x05\x59\x2d\xb5\xab\x3d\x4c\x97\x1f\x09\x2a\xd5\x8f\xaf\xa3\x2b\xd7\x03\x84\x7d\x54\xdc\x7f\x21\xf2\xf6\x17\xd6\x77\xa8\xc8\x77\x31\x30\x95\x25\x19\x08\xfc\xe6\x60\x20\x9c\x3d\x2e\x7d\x17\x80\xe1\x42\x37\x47\x81\xeb\x38\xdb\xc0\xc8\xef\xc1\xf0\xdf\xbf\x9e\x17\x8d\x33\x10\x9c\xc3\x4b\xd8\x7c\x6b\xd0\xf3\xb7\x83\xf7\xbe\xe2\xca\x58\xa6\x32\x9a\x67\x3f\x83\xe6\x4e\xea\xdd\x8f\x78\xc0\x11\xe1\x39\x67\x0c\x22\xf5\x97\xcb\x2f\x4f\x6a\x33\x86\xea\xd6\xd1\x39\xe6\x79\xe0\xdd\xa2\xca\x1c\xe4\xb8\x66\xc5\x5e\xcb\xcf\x41\xea\x09\xd3\x58\x90\x66\xb4\x80\xe7\xc3\xd3\xef\x07\xe7\x39\x56\x6f\xe8\x40\x37\x33\xa1\x16\x9c\x0e\x33\xfd\x83\x11\xf5\x8f\x86\xd4\x81\xfe\xd6\x86\x97\xee\xe1\x30\xc4\x18\xb3\x67\x18\x32\x6c\xe5\x4f\x25\x70\x07\xa2\x46\x84\xe5\x58\x94\x32\x21\xff\xbb\x0f\x43\x46\x43\xcc\x1f\x38\x0f\x41\xbc\xfa\x1f\x1a\x89\x60\x14\x5d\xbd\xbe\x3a\x23\x5f\xc7\x31\xa1\x51\x54\x09\x74\x7c\xb4\x82\xe8\x96\xf0\x44\x77\xf0\x26\x18\x62\x92\x64\x90\xc7\x32\x1c\xa7\x69\x78\x51\xd0\x2c\xaf\x0b\xa3\x01\xec\x37\x81\xab\x87\xcd\xef\x3d\xc0\x7d\xcf\x97\x00\x5e\x43\x0e\xa3\xe6\xc1\xb1\x26\xb4\x94\xd5\xda\x7c\xba\xae\xda\x67\x82\x61\xee\x7f\xed\xda\xfa\x29\x89\x60\x57\x98\x0f\xdb\x70\x4c\x6d\xfe\xd8\x64\xd3\x52\x9a\x8f\x11\xfc\x29\xc1\xb4\x12\xcc\x88\x68\x1f\x9b\x60\x0e\x6e\xdb\x93\x12\xcc\xda\xa6\xd1\x33\x0f\xca\x77\xe1\xf4\x68\x72\x10\xa0\x2a\xc1\x8e\xa7\x17\xbd\xc8\x33\xfb\x6d\xfb\xda\x9a\x20\x8f\x91\x4a\x77\x21\xd5\x66\xfa\x0d\x35\xd3\x5f\xe3\xa5\xb8\x2f\x73\x6c\xeb\x5f\xf4\xc6\x99\x55\xe6\x55\x4a\xe4\xde\x74\xe4\xc4\xfc\x18\x1e\x9a\x3b\x33\x21\xfe\x89\xfe\xb1\xd7\x5a\x06\x04\x26\x24\x34\x88\x46\x9c\xb1\xb6\x6b\xb1\xd7\xec\x87\x3f\x63\x58\xfc\xaa\xe9\x8d\x85\x65\xb4\x82\x42\x5f\x8c\x28\x49\xc3\x77\x34\xbf\x12\xaf\x21\xf1\xbd\x32\x0d\xcd\x23\x2f\x20\x5e\x59\x2d\xf3\x2c\xf2\xf0\x2a\x48\x85\xb4\x3f\x2d\x2e\xde\x5c\x9c\xdf\x90\x13\xf2\x8f\xf9\xd5\x5b\xf2\xe2\x70\x8a\xd7\x36\xe1\x0f\xdf\x5e\xcc\x2f\xf4\x1c\x66\xf6\xf9\x0b\xf9\xf9\xdf\x7f\xd2\x4c\x66\x24\x29\x54\xb8\x28\x45\xc6\x54\xe2\x4b\x15\x10\x23\x2e\xd0\x94\x28\xa9\x42\x41\x2f\x87\x8d\xf1\xb0\xdd\xdd\x4b\x34\x05\xb6\xa7\x7e\x15\x10\xa9\x7a\x6d\x50\x48\x8d\x47\x6d\xd9\x23\x8b\x86\xde\xfb\x77\x68\x53\x2e\x64\x78\x09\x1b\xbf\x90\x69\x7d\x3b\x6b\x82\x2a\x40\x9a\x26\x56\x9e\xf6\xd3\xcb\x91\x9a\xdd\xd8\x50\xfc\x9c\x17\x25\x15\x40\x86\x8d\x37\x21\x4b\xce\xb5\x69\x6a\x45\x6d\x37\xe8\x06\x18\x65\xea\xbb\xd7\x78\xd3\x1a\x21\xcd\xea\xee\x6e\xbd\x7c\xe9\x3a\xb6\x74\x68\x66\x8a\x1d\x16\xed\xab\x39\xb8\x5d\xb7\xd0\x9d\xed\xb8\x32\x7a\xfb\xd5\x86\x81\x38\x3c\x43\xbd\x38\x9a\xc9\x35\x15\x70\x6c\x89\xdd\xea\x68\x36\x36\xcf\xdc\x7c\x2c\x0f\x8e\x39\x44\x3d\x5a\xac\x2e\x48\xbb\xbc\x3b\x35\xea\xb0\x07\x57\x7c\xc3\x8e\xfd\xd0\x2c\xd7\x8c\x9a\x70\x1f\x5b\xb4\x11\xff\x71\x18\x79\xff\x61\x2c\x30\xb6\xc1\xf1\x4f\x38\x4e\x3c\xb8\x68\xfd\xa5\xee\xf1\xe0\xd0\xf2\x7e\x89\x19\x19\xe8\xd7\x5b\x1a\x28\x1c\xf1\x3a\x40\x60\xbb\xec\xa7\x4f\xd3\xdd\x52\xca\x63\x01\x55\x96\xc0\xe2\xc7\x9d\x3d\xa4\xd9\x08\x63\x9c\x3e\xa7\x31\x5e\xfd\x69\x8d\xf1\x6a\xe2\x1e\x41\x77\x0f\x87\x76\xee\x19\x63\x0d\x72\xa2\xe3\xdc\x94\xe6\xb6\x4c\x34\xe2\x4e\x4e\xcc\x7d\x44\x93\x59\x87\x0d\xad\x2e\x40\x58\x19\x22\xe9\x25\x6c\x6e\xee\xad\x65\xce\x91\xed\x7b\x81\x0c\xea\xd7\x99\xde\xe9\x6e\x1a\x19\x9a\x90\x19\xd0\xb4\x7e\xdd\xc6\xfa\xfe\xc2\x18\xdd\x46\x0a\xe3\x45\x91\xa9\x71\xa7\xdd\x17\x24\x8d\xc3\xeb\x37\xc9\xc8\x49\x91\xa5\xe1\x5b\xfd\xe2\xa1\x71\x47\xa1\x5f\x2b\xdb\xbd\x89\x88\x95\xd3\xee\xa9\xdf\x06\xc5\x89\xeb\x14\xe1\x1c\x24\x68\x15\xa6\xd3\xa2\x66\x02\xf8\xb5\x96\x57\x34\xd2\xf6\x6f\xa7\x75\x05\x9a\x77\xdb\xc2\x39\xcf\xf3\x25\x8d\x6e\xbf\xce\x73\x7f\xd2\xda\xb4\x17\x77\x50\x11\x6b\x18\x37\x48\xfd\xb2\xf3\x00\xeb\xbe\x7a\x08\x72\xd6\x79\x31\xcf\xfc\x41\xe3\x60\x15\xbb\xe2\x52\x79\x67\xa4\xfb\x9f\x97\xf3\x88\xe6\xfa\x51\x50\xd3\x95\x5c\xf4\xd0\xfd\xed\xff\xbf\x7a\xd5\x90\xd4\x05\x71\x97\x68\x57\x1c\xef\x88\x9a\xe6\xa0\x4d\xe6\x35\xab\x3b\x32\x6c\x2f\x8f\xc5\xe9\xd5\x46\x23\x2a\xe5\x86\x8b\xb8\xcb\xa9\x59\xdd\x91\xa1\x35\x79\x92\x84\x05\xbd\x07\xa6\x44\x06\xd2\x3b\x23\xde\x57\x5e\xdd\xe3\x63\x59\xbf\x00\x85\x69\x59\x96\x34\x02\xdf\x4b\x05\x96\xf2\xbb\x07\x75\xe4\x1b\x4b\xee\x1d\x1a\x25\x69\xc7\x3b\xbb\x64\x48\x4e\x72\x9e\x86\xe6\x5b\xab\x6c\xc4\xc5\x4b\xd8\xbc\x86\x75\x4d\xf8\x65\x40\xbc\x54\x50\x96\x45\xba\x83\x60\x53\xea\x75\xdd\xbd\xeb\xf2\x9b\xe4\x7c\x6e\xfe\xf6\x75\x45\x3a\xb9\xb6\x25\x07\x84\x61\xf5\x61\x3c\x8d\x3d\x53\x0b\xae\xf6\xd9\x5f\xac\xc6\xa6\x6d\xe4\x36\xb6\x67\x72\xc4\xaa\x95\x97\xc7\xee\x31\x6b\xa8\x51\xfb\x6a\xb6\x87\x11\x4f\x37\x44\x40\xc4\xaa\x85\xdc\x13\x72\x82\xbc\x51\x27\xdd\xe0\x5d\xc2\xe6\x07\x2e\x6e\x1f\x3d\xfd\xea\xe8\x22\xad\xa3\xb0\x36\x98\x3e\xd7\x4a\x57\xda\xfe\xe4\x0c\xcf\xa1\x8f\x45\x31\x82\x6a\x12\xe9\xaf\x5a\xf1\x43\xeb\xc9\x63\xdd\x91\x12\xb3\x2c\x09\xd5\x5d\x1a\x44\xfa\xe5\xaa\x4a\x42\x4c\x14\x47\xba\xb5\x99\xea\xea\x9f\x99\x32\x26\x41\x28\xfd\x3e\x56\x3d\x7e\xe7\x25\x18\x90\x92\x61\xd3\x6c\x9b\x46\x97\xf8\x27\xf2\x2e\xbf\x0f\x5f\x7f\xd3\x69\x8a\xfb\x4a\xbb\x4e\xa7\xac\x37\x5d\x95\xc0\x7c\xaf\xe4\x52\xa5\x02\xb0\xbb\x8b\x97\xdf\xcf\xdf\xf8\x51\x92\x4e\xc6\x77\xd0\xad\xde\xf3\x3a\x63\xe9\xaf\xe8\xbd\x77\x57\x4d\xeb\x55\x87\xc5\x74\x6a\x94\x68\x19\xec\xba\xd6\xaf\x6d\x39\xe3\xa1\xda\x18\x8d\xd6\x47\xc3\x04\xd9\x8c\x3b\x10\xeb\x7a\xbb\x7c\x03\x82\x6d\x44\x9c\xb8\x8e\xfe\x37\x03\x7d\xd4\x1a\x25\x83\x1a\x17\x27\xbf\x76\x7c\xe0\xc4\xcb\x5e\xd2\x3d\x3a\x36\xa0\xf1\x23\xfa\x0e\xb7\x20\x24\xf6\x6e\x32\x58\xb9\x47\x19\x54\x9b\x4a\xd9\xaf\x76\x03\x9a\x1d\xfa\xda\x01\x9d\x69\x00\x9a\x60\xf6\x42\x12\x3c\x29\xfe\x45\x31\xfa\x7b\xcd\x02\x3f\xc7\x4b\xbc\x32\xf8\x49\xca\x1c\x2b\xa0\x59\x9c\x49\xba\xcc\x81\x48\xa0\x22\x5a\xfd\x58\x52\xb5\x9a\xe9\x79\x01\xb2\x0b\x34\x33\x33\x52\x0c\x34\x23\x8c\xb4\xdd\xc4\x03\x61\xf1\x3f\x01\x00\x00\xff\xff\x94\x14\xe7\xea\xb7\x31\x00\x00")

func assetsTemplatesServicetestTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServicetestTmpl,
		"assets/templates/servicetest.tmpl",
	)
}

func assetsTemplatesServicetestTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServicetestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/servicetest.tmpl", size: 12727, mode: os.FileMode(436), modTime: time.Unix(1573082578, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6f\xd4\x30\x10\x85\xcf\xf1\xaf\x18\xad\x7a\x00\xa9\x64\xef\x95\x38\x6d\x11\xea\x01\xb4\x82\x72\x42\x48\x1d\x36\xb3\xc6\x34\xb1\xdd\xf1\xf8\x10\x45\xfe\xef\x28\xa1\x81\x24\x2c\xa9\x57\x42\xa8\xa7\x55\x36\xef\xc5\x6f\xbe\x37\xb2\xc7\xc3\x3d\x6a\x02\x61\xb4\xc1\x3b\x16\xa5\x4c\xd3\xff\xc2\x0b\x55\xc4\x68\x2a\xd8\x68\x23\xdf\xe2\xd7\xf2\xe0\x9a\x6d\x40\x71\x6c\xb6\xda\x95\xfd\xab\x8d\x7a\xa9\x94\xb4\x9e\x7a\xed\x76\x0b\x5d\x07\xe5\x8d\x3d\xd6\xe5\x47\x63\x75\xac\x91\xf7\x18\x0e\x58\xef\x30\x10\xa4\x04\x4c\x0f\x91\x82\x00\xda\x0a\x98\x82\x77\x36\x10\x54\x28\x58\xaa\xe2\x09\x6b\x10\x8e\x07\x81\x4e\x15\x45\xd7\xbd\x02\x46\xab\x09\x2e\xee\xa9\xbd\x84\x0b\xcf\xce\xc3\xd5\x6b\x28\x6f\xc7\x11\xf6\xec\xfc\x35\x1d\x43\x4a\x83\x7e\x50\x94\xef\xb1\xa1\x94\x60\x7c\xbc\x6d\x7d\xff\x78\xf7\x3d\x38\x7b\xb5\x19\xff\x9d\x45\xd8\x61\x43\x43\x82\x94\x2e\x5d\x63\x84\x1a\x2f\xed\xe6\xee\x31\x03\xd9\xaa\xff\x7e\x52\x93\xf0\xfb\x3a\x32\xd6\xf3\xe8\x9f\xbf\xac\xcc\x96\xd2\x02\xe1\x8e\x09\x85\xd6\x69\x7c\xa0\x07\x30\xd6\x47\x19\xe1\xe5\x9a\x7e\x51\x04\x00\xb8\xa9\xc8\x8a\x39\x1a\xe2\x61\xa0\x35\xef\xcf\x29\xb3\xd3\x05\x70\x51\xce\x8e\x17\xe6\x25\xaf\xe7\x29\xde\x05\x0d\xd0\x3b\x8c\xd5\x63\x89\x4d\xd0\x8b\x9e\xde\x30\x3b\x5e\xa8\x88\x79\xae\x5a\x56\xf0\x96\x64\xad\xd0\x3f\xe8\x67\xe8\x7f\x4f\xf6\x08\xf2\x49\xcf\x92\x61\x86\xe1\x14\xbe\x13\xd2\xff\x07\x2f\x6f\x79\xb3\x1c\x93\xd9\xa6\x7b\x7b\x82\x66\xe6\x4e\x66\x59\x9e\xc9\x42\x7e\xf2\xd5\xf9\x77\x42\xae\xe9\x2f\x64\x73\x6f\x84\xbc\x63\x96\xf4\x73\x5d\xcf\xa4\x80\x6b\xaa\xe9\xec\x02\x72\x4d\xeb\xab\x9d\xf7\x95\x25\xdf\x5c\xd7\xe4\xec\x7f\x8c\xef\x47\x00\x00\x00\xff\xff\xbd\xf2\x55\x1e\x57\x08\x00\x00")

func assetsTemplatesTransportTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransportTmpl,
		"assets/templates/transport.tmpl",
	)
}

func assetsTemplatesTransportTmpl() (*asset, error) {
	bytes, err := assetsTemplatesTransportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transport.tmpl", size: 2135, mode: os.FileMode(436), modTime: time.Unix(1572989312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransportcnvTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x55\x4d\x8b\xdb\x30\x10\x3d\x5b\xbf\x62\x9a\x93\xbd\x18\xf9\x1e\xf0\xa1\x6c\x3f\xd8\xc2\xa6\xa1\x49\x4f\x21\x14\xc5\x1e\xbb\x22\xfa\x48\x24\xb9\xa5\x35\xfe\xef\x45\xca\x77\xa1\x76\x20\x61\x5b\xe8\x21\x24\xb1\xdf\xcc\xbc\x79\x6f\x46\xda\xb0\x62\xcd\x6a\x04\x67\x98\xb2\x1b\x6d\x1c\x21\x5c\xfa\x6f\x88\x49\x34\xaa\xb9\x13\x6c\x45\x0b\x2d\x33\xc9\xd7\x46\x7f\xc7\x9f\x28\xb2\x15\x2b\xd6\xa8\xca\xac\x5c\x8d\x48\x24\x61\x00\x25\x75\x89\x62\x44\x48\x34\x6a\x5b\x3a\x5d\xd7\x74\xc2\x24\x76\x5d\xc6\x95\x43\xa3\x98\x38\x00\x12\x42\xaa\x46\x15\x10\x1b\xdc\xc2\xc3\xa3\x41\xe6\xb0\x6d\xe9\x93\xaa\x04\x9d\x71\x55\x37\x82\x99\x29\xb3\x05\x13\x8f\xcc\x62\xd7\x7d\xc2\x6d\x02\x73\xfd\xec\xa3\xe3\x04\x42\x16\xda\x17\x00\x2d\x01\x30\xe8\x1a\xa3\xa0\x6d\xe9\xfc\xd0\x31\xdd\x27\x99\x39\xd3\x14\xae\xeb\x48\x77\x62\x62\xaf\x63\x62\x13\x78\x67\xb4\xdc\x71\x91\xf0\x30\x4c\x26\x05\x69\x6b\xb0\xce\x70\x55\xa7\x80\xc6\xf8\x8f\x36\x09\xb4\x24\xe2\x15\x48\x78\x95\x83\xe2\xc2\xff\x8d\x0c\xda\xfe\xc6\xf2\xcb\x7e\x8e\x54\x8e\x1d\x45\x1d\x09\x59\x9e\x6d\x0d\xb9\xaf\x1c\x8a\xf8\xaa\xbf\x95\x79\xeb\x49\x40\xee\x5f\xed\x7e\xc7\x89\x0f\xbe\x54\xe4\x3d\xba\x03\x9d\xa9\x68\x0c\x13\x7d\x62\x58\x58\x2c\x6f\x93\xc3\xa0\xfd\x73\x39\x18\xe7\xb0\x58\xf6\xa5\x6e\x3b\x12\x55\xda\xc0\x97\x14\xa4\x47\x1b\xa6\x6a\x04\x69\xc3\x38\xf8\x81\xb0\xfe\xe9\xa0\x82\x03\x34\x72\x60\x9b\x0d\xaa\x32\xee\x85\xa5\xbe\x5c\x72\xb4\xa3\x37\x5f\x6f\xa2\xbb\xd9\xb9\xbd\xb0\xf3\x5e\x7b\x16\xed\xd7\x6c\x18\xec\x99\x3e\x95\xa8\x1c\xaf\x78\xc1\x1c\xd7\x6a\x0c\x92\x5e\x3e\xf1\x98\x68\x26\x9a\x7a\x0c\xe5\x8a\xce\xf5\xa4\x11\xde\x18\xae\x6a\xdf\xc0\x11\x8c\x86\x7a\x50\x92\x92\x28\xea\xd2\xde\xb1\x7d\xf9\x2d\xde\x8f\xda\xdf\xdf\xe3\x2c\xdb\x49\xc2\xe0\xe1\x75\xe3\xbe\x26\x20\xd9\x1a\x3f\x6f\xca\xe1\x33\xee\xc3\xec\xe3\xe4\x46\x59\xe2\xc5\x72\xf5\xc3\x61\x7a\x92\x29\xcb\xf6\x0b\x78\x15\x85\xb6\xdb\x05\xd0\x33\x9f\x42\xb1\x90\x31\x09\x2f\xc3\xe0\x31\xea\x74\xe0\x3b\xa4\xb9\x8f\x09\xaa\x1c\x46\x1c\x8a\x70\xde\x5b\x60\xd0\xeb\x55\x50\x01\x2a\xa3\xe5\xe9\xee\x84\x6f\x4c\x34\x68\xe9\xf9\x76\x5d\xd3\xd7\xcb\x5c\x64\x57\x29\xfc\x3f\xac\xc0\x99\x3b\x6f\x50\xe0\xfd\xdd\xf9\x27\x8f\xbf\x6b\x5a\xbd\xaf\xfd\xb7\xd9\xf4\x2b\x00\x00\xff\xff\xeb\xee\x2e\x4c\x9a\x0a\x00\x00")

func assetsTemplatesTransportcnvTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransportcnvTmpl,
		"assets/templates/transportcnv.tmpl",
	)
}

func assetsTemplatesTransportcnvTmpl() (*asset, error) {
	bytes, err := assetsTemplatesTransportcnvTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transportcnv.tmpl", size: 2714, mode: os.FileMode(436), modTime: time.Unix(1573069788, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/templates/jsonrest.tmpl":     assetsTemplatesJsonrestTmpl,
	"assets/templates/migration.tmpl":    assetsTemplatesMigrationTmpl,
	"assets/templates/model.tmpl":        assetsTemplatesModelTmpl,
	"assets/templates/repo.tmpl":         assetsTemplatesRepoTmpl,
	"assets/templates/server.tmpl":       assetsTemplatesServerTmpl,
	"assets/templates/service.tmpl":      assetsTemplatesServiceTmpl,
	"assets/templates/servicetest.tmpl":  assetsTemplatesServicetestTmpl,
	"assets/templates/transport.tmpl":    assetsTemplatesTransportTmpl,
	"assets/templates/transportcnv.tmpl": assetsTemplatesTransportcnvTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"jsonrest.tmpl":     &bintree{assetsTemplatesJsonrestTmpl, map[string]*bintree{}},
			"migration.tmpl":    &bintree{assetsTemplatesMigrationTmpl, map[string]*bintree{}},
			"model.tmpl":        &bintree{assetsTemplatesModelTmpl, map[string]*bintree{}},
			"repo.tmpl":         &bintree{assetsTemplatesRepoTmpl, map[string]*bintree{}},
			"server.tmpl":       &bintree{assetsTemplatesServerTmpl, map[string]*bintree{}},
			"service.tmpl":      &bintree{assetsTemplatesServiceTmpl, map[string]*bintree{}},
			"servicetest.tmpl":  &bintree{assetsTemplatesServicetestTmpl, map[string]*bintree{}},
			"transport.tmpl":    &bintree{assetsTemplatesTransportTmpl, map[string]*bintree{}},
			"transportcnv.tmpl": &bintree{assetsTemplatesTransportcnvTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
